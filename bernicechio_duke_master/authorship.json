[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "//run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    //standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "//}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bernicechio": 35,
      "-": 13
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "# Duke - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Duke is for those who prefer to use a desktop app for managing tasks. Duke can make your life so much more manageable by organising your tasks efficiently. Interested? Jump to Section 2, Quick Start to get started. Enjoy!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "2. Download the latest duke.jar here."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "4. Double-click the file to start the app. The GUI should appear in a few seconds."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "![Image of Duke] "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "(https://github.com/bernicechio/duke/blob/master/docs/Ui.png)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "5. Type the command in the command box and press \u0027Enter\u0027 to execute it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "e.g. typing \u0027todo read book\u0027 and pressing \u0027Enter\u0027 will add the todo task read book to your Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "6. Some example commands you can try:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *`list`*: lists all tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *`deadline return book /by 06/06/2006 0606`*: adds a deadline task return book by 06 June 2006 at 0606 hrs."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *`delete 1`*: deletes the 1st task shown in the current list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "* *`bye`*: exits Duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "7. Refer to Section 3, \"Features\" for details of each command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Adds a todo task. +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `todo read book`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Adds a deadline task. +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `deadline return book /by DD/MM/YYYY hhmm`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Adding an event task: `event`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Adds an event task. + "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `event project meeting /at DD/MM/YYYY hhmm`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Marking a task as done: `done` "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Marks the specified task as done. +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Deletes the specified task from Duke. +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Shows a list of all tasks in Duke. +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Tagging a task: `tag`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Tags a task with a specified keyword. A task can have any number of tags (including 0) +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `tag INDEX KEYWORD`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Finding tasks: `find`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Finds tasks with a related keyword. +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### Exiting Duke: `bye` "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Exits Duke. +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `todo` - Adding a todo task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Adds a todo task to Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Got it. I\u0027ve added this task:[T][X] read book"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " Now you have 1 tasks in the list.`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `deadline` - Adding a deadline task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Adds a deadline task to Duke."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`deadline return book /by 06/06/2006 0606`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Got it. I\u0027ve added this task:[D][X] return book"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " Sun Jun 06 06:06:00 SGT 2006"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `event` - Adding an event task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Adds an event task to Duke."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`event project meeting /at 07/07/2007`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Got it. I\u0027ve added this task:[E][X] project "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " meeting Sun Jul 07 07:07:00 SGT 2007"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `done` - Marking a task as done"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Marks the specified task as done."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[:heavy_check_mark:] read book`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `delete` - Deleting a task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Deletes the specified task from Duke."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[E][X] project meeting Sat Jul 07 07:07:00"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "SGT 2007"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `list` - Listing all tasks"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Shows a list of all tasks in Duke."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Here are the tasks in your list:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "1. [T][:heavy_check_mark:] read book "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "2. [D][X] return book Tue Jun 06 06:06:00 SGT 2006`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `tag` - Tagging a task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Tags a task with a specified keyword."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`tag 1 fun`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Noted. I\u0027ve tagged this task:[T][:heavy_check_mark:] read "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "book#fun"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "as fun`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `find` - Finding tasks"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Finds tasks with a related keyword."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "1. [T][:heavy_check_mark:] read book#fun"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "2. [D][X] return book Tue Jun 06 06:06:00 SGT 2006`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "### `bye` - Exiting Duke"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "Exits Duke."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "`Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 170,
      "-": 13
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "[T][✓] read book #fun"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 1
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to add task. An \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to add task e.g., todo read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, adds task to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If saving tasks in the file throws exception, user interface prints out exception message to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String add message to be printed by UI."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            tasks.addTask(this.task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return ui.printAddMessage(this.task, tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return ui.printException(ex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of AddCommand are equal."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (object instanceof AddCommand) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            AddCommand addCommand \u003d (AddCommand) object;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.task.equals(addCommand.task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 63
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Command object. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user e.g., bye"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, accesses the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Throws exception if task is not found."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String message to be printed by UI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 26
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Deadline object. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an agenda to be done by."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    final static String DEADLINE_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Sets the date of the deadline in a simple date format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If unable to parse the date, exception is thrown."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param time  String containing date and time of deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws ParseException  If unable to parse date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void parseTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the string representation of the Deadline object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"[\" + DEADLINE_TYPE + \"][\" + this.getStatusIcon() + \"] \" + this.description + this.date + getTags();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of Deadline are equal."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (object instanceof Deadline) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Deadline deadline \u003d (Deadline) object;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return deadline.toString().equals(this.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 54
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to delete task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to delete task e.g., delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, deletes task from the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Throws exception if task is not found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If saving tasks in the file throws exception, user interface prints out exception message to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String delete message to be printed by UI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (index \u003e tasks.getListSize()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! Task not found.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        int oldListSize \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        tasks.deleteTask(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        int newListSize \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assert newListSize \u003d\u003d oldListSize - 1 : \"Task should have been deleted\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            ui.printException(ex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return ui.printDeleteMessage(task, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of DeleteCommand are equal."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (object instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            DeleteCommand deleteCommand \u003d (DeleteCommand) object;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.index \u003d\u003d deleteCommand.index;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 70
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        DialogBox dialogBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialogBox.setMinHeight(dialogBox.dialog.getMinHeight());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 63
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to mark task as done. An \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to mark task as done e.g., done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, marks task as done in the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Throws exception if task is not found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If saving tasks in the file throws exception, user interface prints out exception message to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String done message to be printed by UI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (index \u003e tasks.getListSize()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! duke.Task not found.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            ui.printException(ex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return ui.printDoneMessage(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of DoneCommand are equal."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (object instanceof DoneCommand) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            DoneCommand doneCommand \u003d (DoneCommand) object;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.index \u003d\u003d doneCommand.index;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 66
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Duke object. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an object that stores and parses tasks for user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            System.out.println(ui.showLoadingError());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        });"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Iteration 3:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String userText \u003d new String(userInput.getText());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String dukeText \u003d new String(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        );"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Operates the Duke object."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                System.out.println(ui.showLine()); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                System.out.println(c.execute(tasks, ui, storage));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                System.out.println(ui.showError(e.getMessage()));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                System.out.println(ui.showLine());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Creates new Duke object."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 186,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a DukeException object. A \u003ccode\u003eDukeException\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an exception to be thrown in Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "bernicechio": 13
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents an Event object. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an occasion to be at."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    final static String EVENT_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Sets the date of the event in a simple date format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If unable to parse the date, exception is thrown."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param time  String containing date and time of event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws ParseException  If unable to parse date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void parseTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the string representation of the Event object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"[\" + EVENT_TYPE + \"][\" + this.getStatusIcon() + \"] \" + this.description + this.date + getTags();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of Event are equal."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (object instanceof Event) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Event event \u003d (Event) object;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.toString().equals(event.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 54
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to exit Duke. An \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to exit Duke e.g., bye"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user and closes scanner."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String exit message to be printed by UI."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return ui.printExitMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true for exit status."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is true, Duke stops operating."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of ExitCommand are equal."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return object instanceof ExitCommand;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 44
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to find tasks that contain the specified keyword. A \u003ccode\u003eFindCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to find tasks e.g., find book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    FindCommand(String word) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, finds tasks that contain the related word."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String find message to be printed by UI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        sb.append(ui.printFindMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        for (Task t: tasks.taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            if (t.description.contains(word)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                sb.append(counter).append(\". \").append(t).append(\"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 46
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 12
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to list all tasks. An \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to list all tasks in the task list e.g., list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints out each task in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list ."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String list message to be printed by UI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        sb.append(ui.printListMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        for (Task t : tasks.taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            sb.append(counter).append(\". \").append(t).append(\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of ListCommand are equal."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return object instanceof ListCommand;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 53
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                DialogBox.getDukeDialog(\"     Hello! I\u0027m Duke\\n\" + \"     What can I \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                        + \"do for you?\", dukeImage));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 54
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Parser object in the Duke. A \u003ccode\u003eParser\u003c/code\u003e object parses"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * string command given by user and creates new Command object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns a new Command object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If the command is invalid, Duke Exception is thrown."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param fullCommand  String containing command from user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return new Command object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws DukeException  If command is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"tag\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return createTagCommand(arr);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            int indexDelete \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new DeleteCommand(indexDelete);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            int indexDone \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return new DoneCommand(indexDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return createTodoCommand(arr);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return createDeadlineCommand(arr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return createEventCommand(arr);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return createFindCommand(arr);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private static TagCommand createTagCommand(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String tagDescription \u003d arr[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (tagDescription.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a tag cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String[] indexTag \u003d tagDescription.split(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        int indexOfTag \u003d Integer.parseInt(indexTag[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String wordOfTag \u003d indexTag[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (wordOfTag.isEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! The tag word cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return new TagCommand(indexOfTag, wordOfTag);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private static AddCommand createTodoCommand(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String what \u003d arr[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (what.isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Todo todo \u003d new Todo(what);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return new AddCommand(todo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private static AddCommand createDeadlineCommand(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String when \u003d arr[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (when.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String[] parts \u003d when.split(\"/by\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (parts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String desc \u003d parts[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String time \u003d parts[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Deadline deadline \u003d new Deadline(desc);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            deadline.parseTime(time);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return new AddCommand(deadline);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private static AddCommand createEventCommand(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String where \u003d arr[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (where.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String[] partsE \u003d where.split(\"/at\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (partsE.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String descE \u003d partsE[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String timeE \u003d partsE[1];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Event event \u003d new Event(descE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            event.parseTime(timeE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return new AddCommand(event);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private static FindCommand createFindCommand(String[] arr) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String word \u003d arr[1];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (word.isEmpty()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what to find :-(\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return new FindCommand(word);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 118
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Storage object in the Duke. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * writing and loading data to a file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private ArrayList\u003cTask\u003e alist;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    final char TICK \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the list of tasks saved previously."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If there is input output exception, Duke Exception is thrown."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return ArrayList list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws DukeException If there is input output exception."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        alist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        BufferedReader br;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String tags;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            br \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                description \u003d line.substring(7);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                tags \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                if (description.contains(\"#\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    String[] array \u003d description.split(\"#\", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    description \u003d array[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    tags \u003d array[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                char eventType \u003d line.charAt(1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                char symbol \u003d line.charAt(4);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                if (eventType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    loadTodo(tags,symbol, description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                } else if (eventType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    loadDeadline(tags, symbol, description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    assert eventType \u003d\u003d \u0027E\u0027 : \"Event loaded from hard disk should be event type\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                    loadEvent(tags, symbol, description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return alist;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void loadTodo(String tags, char symbol, String description) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (!tags.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            loadTags(tags, todo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (symbol \u003d\u003d TICK) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            todo.markDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        alist.add(todo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void loadDeadline(String tags, char symbol, String description) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Deadline deadline \u003d new Deadline(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (!tags.isEmpty()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            loadTags(tags, deadline);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (symbol \u003d\u003d TICK) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            deadline.markDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        alist.add(deadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void loadEvent(String tags, char symbol, String description) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Event event \u003d new Event(description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (!tags.isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            loadTags(tags, event);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (symbol \u003d\u003d TICK) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            event.markDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        alist.add(event);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private void loadTags(String tags, Task task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String[] tagArray \u003d tags.split(\"#\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        for (String t: tagArray) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            task.addTag(t);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Saves all tasks to the file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If there is input output exception, Duke Exception is thrown."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks  TaskList containing list of tasks"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @throws DukeException  If there is input output exception."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void writeToHardDisk(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            for (Task t: tasks.taskList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                fileWriter.write(t + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 123
    }
  },
  {
    "path": "src/main/java/duke/TagCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a command to add a tag. A \u003ccode\u003eTagCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an input from user to add a string tag to a task e.g., tag 1 fun"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class TagCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public TagCommand(int index, String tag) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Executes the command, adds tag to the task of specified index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Throws exception if task is not found."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * User interface prints out message to user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param tasks Contains the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param ui Deals with interactions with the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param storage Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String tag message to be printed by UI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (index \u003e tasks.getListSize()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(\"OOPS!!! Task not found.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Task task \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        task.addTag(tag);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return ui.printTagMessage(tag, task, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns false for exit status."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * If exit status is false, Duke continues operating."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 47
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Task object. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an agenda to be done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ArrayList\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns tick symbol if task is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns X."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String tick or X symbol."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Sets done status to true."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void markDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Adds a tag to this task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void addTag(String tag) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        tags.add(tag);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns string containing all tags of this task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String containing all tags of this task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String getTags() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        for (String tag: tags) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            sb.append(\"#\" + tag);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 57
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a TaskList object. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an object containing the list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Removes task from the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param task Task to be deleted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void deleteTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Adds task to the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Gets current size of the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return int Task list size."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    int getListSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Gets task from corresponding index of the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return Task from corresponding index of the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Task getTask(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return taskList.get(index - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 55
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a Todo object. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * a task to be done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    final static String TODO_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns the string representation of the Todo object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"[\" + TODO_TYPE + \"][\" + this.getStatusIcon() + \"] \" + this.description + getTags();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns true if two instances of Todo are equal."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Otherwise, returns false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @param object  An object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    public boolean equals(Object object) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        if (object instanceof Todo) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            Todo todo \u003d (Todo) object;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            return this.description.equals(todo.description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 38
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * Represents a User interface object. A \u003ccode\u003eUser interface\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " * an interface that deals with interactions with the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Greets user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Returns full command directly from user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * @return String full command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Closes scanner."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void closeScanner() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints formatting line."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String showLine() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"_____________________________________________________________________________\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints exit command message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printExitMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints list command message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printListMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints find command message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printFindMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints delete command message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printDeleteMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\" + task +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                \"\\n\" + \"Now you have \" + tasks.getListSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints done command message."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                + \"[\" + task.getStatusIcon() + \"] \" + task.description;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints add command message."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printAddMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\" + task +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                \"\\n\" + \"Now you have \" + tasks.getListSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printTagMessage(String tag, Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Noted. I\u0027ve tagged this task:\" + task +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                \"\\n\" + \" as #\" + tag;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints exception message."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String printException(Exception ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return ex.getMessage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints loading error message."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String showLoadingError() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return \"Loading Error\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    String showError(String errorMessage) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 123
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_byeCommand() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_listCommand() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_deleteCommand() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new DeleteCommand(1), Parser.parse(\"delete 1\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_doneCommand() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new DoneCommand(1), Parser.parse(\"done 1\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_todoCommand() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new AddCommand(new Todo(\"read book\")), Parser.parse(\"todo read book\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_deadlineCommand() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Deadline expectedDeadline \u003d new Deadline(\"return book\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            expectedDeadline.parseTime(\"06/06/2019 1800\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new AddCommand(expectedDeadline), Parser.parse(\"deadline return book /by 06/06/2019 1800\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    void parse_eventCommand() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        Event expectedEvent \u003d new Event(\"project meeting\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            expectedEvent.parseTime(\"2/12/2019 1400\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "        assertEquals(new AddCommand(expectedEvent), Parser.parse(\"event project meeting /at 2/12/2019 1400\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bernicechio"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bernicechio"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bernicechio": 58
    }
  }
]
