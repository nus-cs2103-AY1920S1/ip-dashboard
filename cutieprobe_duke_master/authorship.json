[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "cutieprobe": 22
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "cutieprobe": 17
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create an instance of Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            taskList \u003d storage.loadData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ui.showException(e);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ui.print();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Start executing the duke project."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui.showGreeting();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                String input \u003d ui.getInput();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                ui.showException(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                ui.print();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Main method of duke project."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "cutieprobe": 52
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a new Duke exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param message Description of the exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 11
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String getCommand(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return tokens[0].trim().toLowerCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String getDetails(String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String[] tokens \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return tokens[1].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Details of your command not found.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Command parseDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(getDetails(input)) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Command parseDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(getDetails(input)) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Command parseTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String description \u003d getDetails(input).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The task description cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return new TodoCommand(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Command parseDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String[] taskDetails \u003d getDetails(input).split(\"/by\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String description \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String by \u003d taskDetails[1].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                throw new DukeException(\"The task description cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else if (by.isBlank()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                throw new DukeException(\"The task deadline cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return new DeadlineCommand(description, by);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The task description and deadline cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Command parseEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String[] taskDetails \u003d getDetails(input).split(\"/at\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String description \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String at \u003d taskDetails[1].trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                throw new DukeException(\"The task description cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else if (at.isBlank()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                throw new DukeException(\"The task date/time cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return new EventCommand(description, at);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The task description and deadline cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private Command parseFind(String input) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String keyword \u003d getDetails(input).trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (keyword.isBlank()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The task keyword cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return new FindCommand(keyword);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Translate the input into commands."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param input the text users type in"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the command of the user"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if error occurs when parsing input"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String command \u003d this.getCommand(input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return parseDone(input);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return parseDelete(input);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return parseTodo(input);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return parseDeadline(input);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return parseEvent(input);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return parseFind(input);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Please enter a valid command!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 123
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static final String FILEPATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Retrieve data from the storage file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the task list stored in data file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when loading data"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public TaskList loadData() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(FILEPATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (file.available() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                return new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ObjectInputStream object \u003d new ObjectInputStream(file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            TaskList tasks \u003d (TaskList) object.readObject();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            object.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The data file is not found.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The data file is corrupted.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The data file is empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Store data into the storage file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param tasks the task list of the project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when saving data"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void saveData(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            FileOutputStream file \u003d new FileOutputStream(FILEPATH);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ObjectOutputStream object \u003d new ObjectOutputStream(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            object.writeObject(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            object.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"The data file is not found.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            //throw new DukeException(\"Cannot save data to the file.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 60
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static final StringBuilder INDENT \u003d new StringBuilder(\" \".repeat(5));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static final StringBuilder HORIZONTAL_LINE \u003d new StringBuilder(INDENT + \"_\".repeat(50) + \"\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Read input each time the user type in."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return a string of the input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return scanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add exception message to output string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param e a Duke exception"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showException(DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(String.format(\"Oops! %s\\n\", e.getMessage()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add greeting message to output string."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String greeting \u003d \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                + \"     What can I do for you?\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add message to output string when there is no task in the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showNoTask() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"There is currently no task in the list!\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add message and task information to output string when there are tasks in the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            this.content.append(INDENT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            this.content.append(String.format(\"     %d.%s\\n\", i + 1, taskList.getTask(i)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add exit message to output string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add done message to output string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param task a task to be marked as done"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(task + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add delete message to output string."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param task a task to be deleted from the task list"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showDelete(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(task + \"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getSize()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add add-task message to output string."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param task a task to be added into the task list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showAddTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(String.format(\"  %s\\n\", task));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getSize()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add message to output string when there is no task matching the given keyword."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showNoMatchingTask() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"There is no matching task in the list!\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add message and task information of all matching tasks to output string when there are tasks in the task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void showMatchingTasks(List\u003cTask\u003e selectedTasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(INDENT);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        for (int i \u003d 0; i \u003c selectedTasks.size(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            this.content.append(INDENT);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            this.content.append(String.format(\"     %d.%s\\n\", i + 1, selectedTasks.get(i)));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Print the output string as a response to user."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        output.append(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        output.append(content);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        output.append(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.print(output.toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 141
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Perform a command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when executing the command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Check whether the command is an exit command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return whether the command is an exit command, default value is false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 25
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a deadline command instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param description information of the deadline task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param by deadline of the deadline task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when executing the command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task deadline \u003d new Deadline(this.description, this.by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui.showAddTask(deadline, taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a delete command instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskIndex index of the task to be deleted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Delete a task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when executing the command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task task \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        taskList.removeTask(taskIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui.showDelete(task, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a done command instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskIndex index of the task to be marked as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when executing the command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task task \u003d taskList.getTask(this.taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui.showDone(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create an event command instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param description information about the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param at date and time of the event in string format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create an event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when executing the command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task event \u003d new Event(this.description, this.at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui.showAddTask(event, taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Exit the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Check whether the command is an exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        List\u003cTask\u003e selectedTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (task.getDescription().toLowerCase().contains(this.keyword)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                selectedTasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (selectedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ui.showNoMatchingTask();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ui.showMatchingTasks(selectedTasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * List all tasks in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ui.showNoTask();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            ui.showTasks(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a todo command instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param description information about the todo task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a todo task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param taskList task list of the Duke project"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param ui an instance of the Ui class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param storage an instance of the storage class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur when executing the command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task todo \u003d new Todo(this.description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        ui.showAddTask(todo, taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        storage.saveData(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 34
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a deadline task instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param description information about the deadline task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param by the deadline in string format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur in parsing the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            this.by \u003d dateTimeFormatter.parse(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Incorrect date/time format for the task.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Generate the text representation of the deadline task in display format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the representation of the deadline task in display format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTimeFormatter.format(by) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create an Event instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param description information about th event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param at the date and time of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @throws DukeException if errors occur in parsing the datetime"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            this.at \u003d dateTimeFormatter.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Incorrect Date/time format for the task.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Generate the text representation of the event in display format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the representation of the event in display format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTimeFormatter.format(at) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected static final SimpleDateFormat dateTimeFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a Task instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param description information about the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Get status icon according the to isDone status."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return a status icon indicating whether the task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Get description of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return description of the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Get the isDone status of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return whether the task is done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Generate the text representation of the task in display format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the representation of the task in display format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 60
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Add a task to the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param task the task to be added into the task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Get a task from the task list by index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param index the index of the task in the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the task of the given index"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Remove a task from the task list by index."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param index the index of the task in the task list to be removed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Get length of the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the length of the task list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 42
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Create a Todo instance."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @param description information about the todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Generate the text representation of the todo task in display format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * @return the representation of the todo task in display format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 21
    }
  },
  {
    "path": "src/test/java/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void addTask_todoTask_pass() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task todo \u003d new Todo(\"A sample todo task.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        assertEquals(taskList.getTask(0), todo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 18
    }
  },
  {
    "path": "src/test/java/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void markAsDone_todo_pass() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Todo todo \u003d new Todo(\"A todo task.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        assertTrue(todo.getIsDone());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "deadline CS2103 iP /by today"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "event birthday party /at tmr 6pm-8pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "deadline presentation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "deadline /by this week"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "event watch movie"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "event /at 12 Sept"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "done 12"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "done nani"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if [ ! -d \"../bin\" ]; then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java; then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# clear the duke data file, run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "echo -n \u003e ../data/duke.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if diff ACTUAL.TXT EXPECTED.TXT; then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "else"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 30
    }
  }
]
