[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    testImplementation(\"org.junit.jupiter:junit-jupiter-api:5.5.1\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    testRuntimeOnly(\"org.junit.jupiter:junit-jupiter-engine:5.5.1\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "tasks.withType(Test) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    mainClassName \u003d \"main.Launcher\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "CowSaysBaa": 46
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "![Sample image](https://raw.githubusercontent.com/CowSaysBaa/duke/master/docs/Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### Task tracking"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "You can keep track of the Todos and tasks with dates such as:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "- Deadlines"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "- Events"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### Marking tasks as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "You can mark a task as done upon completion."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### Delete tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "You can delete unwanted or completed tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### Find tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "You can search for specific tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### Sort tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "You can sort tasks by due date, with the earliest due tasks at the top."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\t\t"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `bye` - Terminates the program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`Program terminates.`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `list` - List all saved tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Shows the list of saved tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`A list of all your tasks is shown.`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `todo` - Adds a todo task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Adds a todo task to current task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`todo \u003ctask\u003e`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`Acknowledgement that a todo task is added.`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `Deadline` - Adds a deadline task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Adds a deadline task to current task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`deadline \u003cdescription\u003e by/\u003cdate\u003e`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`\u003cdate\u003e must follow dd/MM/yyyy HHmm format.`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`Acknowledgement that a deadline task is added.`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `event` - Adds an even task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Adds an event task to current task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`event \u003cdescription\u003e at/\u003cdate\u003e`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`\u003cdate\u003e must follow dd/MM/yyyy HHmm format.`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`Acknowledgement that an event task is added.`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Use the `list` command to see your list of tasks, and mark the index of the desired task as done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`Acknowledgement of the done command and the newly marked task is shown.`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `delete` - Deletes a task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Use the `list` command to see your list of tasks, and delete the index of the task."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`The task at the index is removed from the list.`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `find` - Search for a task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Search for all tasks containing the given keyword."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`search \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`A list containing all the tasks with the given keyword is returned.`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "### `sort` - Sorts the list"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "The current list of tasks is sorted according to date in ascending order. Todos are placed below all tasks with dates."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`sort`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "`Acknowledgement of the sort command.`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "CowSaysBaa": 128
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "CowSaysBaa": 17
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to add a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String[] temp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates an AddCommand object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param input User input taken from the scanner."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp  Parsed String array derived from input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public AddCommand(String input, String[] temp) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds the given command by creating the associated object and"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * adding it to the array within task, writing the updated list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * to storage and printing the current list size. If no task is added,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * input is considered invalid and an error is displayed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If file is not found."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            switch (temp[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                task.addDeadline(input, false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return ui.printAdd(task.getList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                task.addEvent(input, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return ui.printAdd(task.getList());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                task.addToDo(input, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return ui.printAdd(task.getList());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printError(\"Please enter a description followed by a valid date and time.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 72
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Abstract class for command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public abstract String execute(TaskList task, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 15
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String[] temp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates an DeleteCommand object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp Parsed String array derived from input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DeleteCommand(String[] temp) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Deletes the task associated with the number from task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * adding it to the array within task, writing the updated list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * to storage and printing the current list size."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException          If file is not found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws NullPointerException If an invalid task number is received."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws NullPointerException, IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Task toRemove \u003d task.getList().remove(Integer.parseInt(temp[1]) - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printRemove(task.getList(), toRemove);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printError(\"Please input a valid task number to delete.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printError(\"Please input a valid task number to delete.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 48
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String[] temp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates an DoneCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp Parsed String array derived from input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DoneCommand(String[] temp) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Marks a task as done, updates the file in storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If file is not found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            int index \u003d Integer.parseInt(temp[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            task.getList().get(index).markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printDone(task.getList(), index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printError(\"Please input a valid task number.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printError(\"Please input a valid task number.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 45
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to end the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints the termination message and ends the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return ui.printBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 24
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the user command to find tasks with the keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String[] temp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String keywords;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the FindCommand object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param temp Parsed array of string based on user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public FindCommand(String[] temp) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.temp \u003d temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String[] keywordArray \u003d Arrays.copyOfRange(temp, 1, temp.length);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        keywords \u003d String.join(\" \", keywordArray);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Loops through the task array to find tasks with descriptions that"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * contain the keyword. Found tasks are added to an ArrayList which"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * is printed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (keywords.equals(\"\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ui.printMessage(\"Please input a valid keyword\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            for (Task curr : task.getList()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                if (curr.getDescription().contains(keywords)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    foundList.add(curr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (!foundList.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return ui.printFound(foundList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return ui.printMessage(\"No matching task found\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 56
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to display the current list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Displays the current list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String representation of the acknowledgement message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return ui.printList(task.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 24
    }
  },
  {
    "path": "src/main/java/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskComparer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the command to sort the current list from."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Sorts the file in descending order by date. Todos have the lowest priority and are sorted alphabetically."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task    The working TaskList object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param ui      The working Ui object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param storage The working storage object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String stating List is sorted."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Collections.sort(task.getList(), new TaskComparer());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        storage.arrayToFile(task.getList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"List sorted\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 29
    }
  },
  {
    "path": "src/main/java/main/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates a DialogBox from the user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param text User input string."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param img User image."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates a DialogBox from the duke response."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param text Duke response string."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param img Duke image."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 73
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * The main driver of the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private TaskList task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the Ui, Storage and Tasklist objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            this.storage \u003d new Storage(\"./todoList.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            this.task \u003d new TaskList(storage.fileInitialization());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(ui.printError(\"File not found\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(ui.printError(e.getMessage()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(ui.printError(e.getMessage()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates and run duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        System.out.println(ui.printMessage(\"Hello! I\u0027m Duke\\nWhat can i do for you?\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            duke.run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Starts the program sequence."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            while (temp.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                System.out.println(ui.printMessage(\"Please input something :(\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(c.execute(task, ui, storage));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(new ExitCommand().execute(task, ui, storage));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            assert !input.equals(\"bye\") : \"input \u003d bye, error in code.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            output \u003d c.execute(task, ui, storage);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            output \u003d e.getMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            output \u003d ui.printError(\"Please input something :(\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 99
    }
  },
  {
    "path": "src/main/java/main/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 12
    }
  },
  {
    "path": "src/main/java/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 12
    }
  },
  {
    "path": "src/main/java/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 31
    }
  },
  {
    "path": "src/main/java/main/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Duke\u0027s reply and then appends them to the dialog container. Clears the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 51
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import command.SortCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the interpretation of user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Splits the user input into a String array in order to understand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * the given command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param input User input String."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return An command object representing the user command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If file is not found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static Command parse(String input) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else if (input.equals(\"sort\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return new SortCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String[] temp \u003d input.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (temp[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new DoneCommand(temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else if (temp[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new DeleteCommand(temp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else if (temp[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new FindCommand(temp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                return new AddCommand(input, temp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 48
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the storage of tasks on local text file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates a storage object, attempts to read text"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * file or create the text file if not found."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param filePath path of .txt file to be read or saved."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Initialize the txt file by copying the contents of the text file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * onto a Task array."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return Task array."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws FileNotFoundException If file is not found."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws DukeException if task type cannot be determined."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public ArrayList\u003cTask\u003e fileInitialization() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ArrayList\u003cTask\u003e clone \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            String[] inputArr \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            boolean done;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            done \u003d inputArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            switch (inputArr[0]) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                clone.add(new ToDos(inputArr[2], done));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                clone.add(new Deadlines(inputArr[2], TaskList.dateTimeParser(inputArr[3]), done));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                clone.add(new Events(inputArr[2], TaskList.dateTimeParser(inputArr[3]), done));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                throw new DukeException(\"Task type cannot be determined from file.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return clone;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Replaces text file with new text file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param textToAdd Content of the new text file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If the file is not found."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Converts the given array of Task into a string that is written onto"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * the text file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param arr Array of Task to be translated into the text file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws IOException If the file is not found."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void arrayToFile(ArrayList\u003cTask\u003e arr) throws IOException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String memo \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        for (Task i : arr) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            int done;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (i.isDone()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                done \u003d 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                done \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            if (i instanceof ToDos) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                memo \u003d memo + \"T | \" + done + \" | \" + i.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else if (i instanceof Deadlines) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                memo \u003d memo + \"D | \" + done + \" | \" + i.getDescription() + \" | \""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                        + TaskList.localDateTimeToString(((Deadlines) i).getDate()) + \"\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                memo \u003d memo + \"E | \" + done + \" | \" + i.getDescription() + \" | \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                        + TaskList.localDateTimeToString(((Events) i).getDate()) + \"\\n\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        writeToFile(memo);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 121
    }
  },
  {
    "path": "src/main/java/main/TaskComparer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.DateTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.ToDos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Comparator for comparing Tasks for sorting."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class TaskComparer implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public int compare(Task a, Task b) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        if (a instanceof ToDos \u0026\u0026 b instanceof ToDos) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return b.getDescription().compareTo(a.getDescription());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else if (a instanceof ToDos) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else if (b instanceof ToDos) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            return ((DateTask) a).getDate().compareTo(((DateTask) b).getDate());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 26
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents a list of Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the TaskList object with the given array."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Returns the array of Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return Array of Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.arr;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds ToDo Task object to the array."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param whatToAdd Task message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone    Marks the task as done nor not done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void addToDo(String whatToAdd, boolean isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        message \u003d whatToAdd.substring(whatToAdd.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.add(new ToDos(message, isDone));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds Event Task object to the array."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param whatToAdd Task message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone    Marks the task as done nor not done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws DukeException If the input message is not recognised."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void addEvent(String whatToAdd, boolean isDone) throws DateTimeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        LocalDateTime date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        date \u003d dateTimeParser(whatToAdd.substring(whatToAdd.indexOf(\"/at\") + 4));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        message \u003d whatToAdd.substring(whatToAdd.indexOf(\u0027 \u0027) + 1, whatToAdd.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.add(new Events(message, date, isDone));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Adds Deadline Task object to the array."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param whatToAdd Task message."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone    Marks the task as done nor not done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @throws DukeException If the input message is not recognised."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void addDeadline(String whatToAdd, boolean isDone) throws DateTimeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        LocalDateTime date;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        date \u003d dateTimeParser(whatToAdd.substring(whatToAdd.indexOf(\"/by\") + 4));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        message \u003d whatToAdd.substring(whatToAdd.indexOf(\u0027 \u0027) + 1, whatToAdd.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.add(new Deadlines(message, date, isDone));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Formats a string and returns a LocalDateTime object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param input Date and Time formatted in the DD/MM/YY HHMM format."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return LocalDateTime object."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static LocalDateTime dateTimeParser(String input) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return LocalDateTime.parse(input, formatter);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Formats a LocalDateTime format to a String."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param dateTime LocalDateTime object."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String representation of the LocalDateTime object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static String localDateTimeToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 99
    }
  },
  {
    "path": "src/main/java/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the printing of outputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints out the contents of a list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param arr The array to print."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String of the output."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            output \u003d output + (i + 1) + \".\" + arr.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints out the command to add a task to an array."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param arr The array to be added to."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String of the output."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printAdd(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        output +\u003d arr.get(arr.size() - 1) + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        output +\u003d \"Now you have \" + arr.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints out the done command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param arr   The array to print."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param index The index of the task in the list to be marked as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String of the output."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printDone(ArrayList\u003cTask\u003e arr, int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        arr.get(index).markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + arr.get(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints out the command to remove an element from the array."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param arr  The array to print."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param task The task to be removed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String of the output."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printRemove(ArrayList\u003cTask\u003e arr, Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\" + task + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        output \u003d output + \"Now you have \" + arr.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Returns the bye message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printBye() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints out the error message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param errorMessage The error message to be printed out."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String of the output."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printError(String errorMessage) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints out the message."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param message The error message to be printed out."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String of the output."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printMessage(String message) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Prints out the list of tasks with the search keyword."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param arr The array where the search takes place."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return String of the output."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String printFound(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            output \u003d output + (i + 1) + \".\" + arr.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 107
    }
  },
  {
    "path": "src/main/java/task/DateTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents Tasks with associated date and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DateTask extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the DateTask object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param date        Date for task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    DateTask(String description, LocalDateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Returns the LocalDateTime object of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @return LocalDateTime object of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 32
    }
  },
  {
    "path": "src/main/java/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Deadlines extends DateTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the Deadlines object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param date        Date of deadline in DD/MM/YYYY TTTT format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public Deadlines(String description, LocalDateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(description, date, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + getDescription()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                + \" (by: \" + TaskList.localDateTimeToString(getDate()) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 28
    }
  },
  {
    "path": "src/main/java/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Events extends DateTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the Events object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param date        Date of deadline in DD/MM/YYYY TTTT format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public Events(String description, LocalDateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(description, date, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + getDescription()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                + \" (at: \" + TaskList.localDateTimeToString(getDate()) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 28
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task, inherited by Deadlines, Events, ToDos."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the Task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    protected Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 41
    }
  },
  {
    "path": "src/main/java/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " * Represents the task todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Creates the ToDos object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param description Task message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * @param isDone      Marks the task as done nor not done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public ToDos(String description, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 22
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            fx:controller\u003d\"main.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 24
    }
  },
  {
    "path": "src/main/resources/view/oldDialogueBox.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 47
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import task.Deadlines;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void testDateTime() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            assertEquals(\"10/10/2001 1000\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    TaskList.localDateTimeToString(TaskList.dateTimeParser(\"10/10/2001 1000\")));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void testDeadlines() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            assertEquals(false,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                    new Deadlines(\"test\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "                            TaskList.dateTimeParser(\"10/10/1000 1000\"), false).isDone());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    public void testDukeException() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "        assertEquals(\"hi\", new DukeException(\"hi\").getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CowSaysBaa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CowSaysBaa": 36
    }
  }
]
