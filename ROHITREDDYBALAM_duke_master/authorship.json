[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Deadline(String description, String by, boolean b){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.isDone \u003d b;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Duke(String s){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        list \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        storage \u003d new Storage(s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "   public void run() throws ParseException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       this.ui.Greet();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       File f \u003d new File(\"/Users/sairo/OneDrive/Desktop/Duke/Data/Duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       Scanner sca \u003d new Scanner(f);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       while(sca.hasNext()){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           String dat \u003d sca.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           this.parser.readTask(dat,this.list);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       while(scan.hasNextLine()){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           String a \u003d scan.next();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           if(a.equals(\"bye\")){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.ui.Exit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               String s \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               for(Task t : this.list.taskList){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                   s \u003d s + t.toString()+ \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.storage.writeFile(s);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else if(a.equals(\"list\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.list.getList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else if(a.equals(\"done\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               int num \u003d scan.nextInt();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.list.MarkAsDone(num-1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               String c \u003d scan.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else if(a.equals(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               String b \u003d scan.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.list.readEvent(b);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else if(a.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               String det \u003d scan.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.list.readDeadline(det);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else if (a.equals(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               String todoDetails \u003d scan.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.list.readTodo(todoDetails);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else if(a.equals(\"delete\")){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               int number \u003d scan.nextInt();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.list.deleteTask(number);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else if(a.equals(\"find\")){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               String required \u003d scan.next();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               this.list.Find(required);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           else{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               System.out.println(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "               String empt \u003d scan.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "           }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "   }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       new Duke(\"/Users/sairo/OneDrive/Desktop/Duke/Data/Duke.txt\").run();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 75,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected Date on;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Event(String description, Date on, boolean b){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.isDone \u003d b;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Event(String description, Date on){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"E, MMM dd yyyy HH:mm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + df.format(on) + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 26
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Parser(){}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public void readTask(String s, TaskList t) throws ParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(\"E, MMM dd yyyy HH:mm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        if(s.contains(\"[T]\")){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            if(s.contains( \"[\"+\"\\u2713\"+\"]\")){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                t.Add(new ToDo(s.substring(7), true));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                t.Add(new ToDo(s.substring(7)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        else if(s.contains(\"[E]\")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            int start \u003d s.indexOf(\u0027(\u0027);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String e \u003d s.substring(7,start-1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String dl \u003d s.substring(start+5, start+27);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            Date at \u003d df.parse(dl);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            if(s.contains( \"[\"+\"\\u2713\"+\"]\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                t.Add(new Event(e,at, true));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                t.Add(new Event(e,at));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            int sl \u003d s.indexOf(\u0027(\u0027);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String d \u003d s.substring(7,sl-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String by \u003d s.substring(sl+4);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            if(s.contains( \"[\"+\"\\u2713\"+\"]\")){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                t.Add(new Deadline(d,by,true));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            else"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                t.Add(new Deadline(d,by));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 47
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public void writeFile( String content) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        fw.write(content);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 17
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Task(String description, boolean b){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.isDone \u003d b;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void Add(Task t){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void addMessage(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println(\" Got it. I\u0027ve added this task: \" );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println(taskList.get(taskList.size() - 1));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        if(taskList.size() \u003d\u003d 1)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"Now you have 1 task in your list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        else"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void MarkAsDone(int x){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        taskList.get(x).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println( taskList.get(x) );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void deleteTask(int y) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        if (taskList.size() \u003d\u003d 0)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"The task list is empty\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(taskList.get(y - 1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            taskList.remove(y - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            if (taskList.size() \u003d\u003d 1)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                System.out.println(\"Now you have 1 task in your list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            else"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void Find(String s){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        for(Task t : taskList){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            if(t.description.contains(s)){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                System.out.println(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "                count+\u003d1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        if(count \u003d\u003d 0)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"There are no matching tasks in your list\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void getList(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d taskList.size(); i+\u003d1){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(i + \". \" + taskList.get(i-1) );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void readEvent(String b) throws ParseException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        if (b.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"\\u2639\" + \" OOPS!!! the description of a event cannot be empty. \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            int first \u003d b.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String desc \u003d b.substring(0, first - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String on \u003d b.substring(first + 4);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            Date at \u003d df.parse(on);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            Task t1 \u003d new Event(desc, at, false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            this.Add(t1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            this.addMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void readDeadline(String s){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        if (s.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"\\u2639\" + \" OOPS!!! the description of a deadline cannot be empty. \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            int first \u003d s.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String descr \u003d s.substring(0, first - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            String byTime \u003d s.substring(first + 4);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            Task t1 \u003d new Deadline(descr, byTime, false);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            this.Add(t1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            this.addMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    protected void readTodo(String s){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        if (s.length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            System.out.println(\"\\u2639\" + \" OOPS!!! the description of a todo cannot be empty. \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            Task t1 \u003d new ToDo(s, false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            this.Add(t1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "            this.addMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 102
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public ToDo(String description, boolean b) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        this.isDone \u003d b;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public Ui(){}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    void Greet() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    void Exit() throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 14
    }
  },
  {
    "path": "src/test/java/TestTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class TestTask {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public void testStringConversion(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        assertEquals(\"[\" + \"\\u2718\" + \"] test\",new Task(\"test\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public void testMarkAsDone(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        Task t \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "        assertEquals(true, t.isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 19
    }
  },
  {
    "path": "src/test/java/TestToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "public class TestToDo {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    public void testStringConversion(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "       assertEquals(\"[T][\" +  \"\\u2718\" + \"] test\",new ToDo(\"test\").toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ROHITREDDYBALAM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ROHITREDDYBALAM": 9
    }
  }
]
