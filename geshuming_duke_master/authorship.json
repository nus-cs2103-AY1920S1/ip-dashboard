[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveVersion \u003d version"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 21,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Starts up the Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param args options. (Currently none)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ui \u003d Ui.getInstance();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ui.printLine(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            String input \u003d ui.getNextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                ui.printLine(\"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                isRunning \u003d !c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                ui.printLine(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ui.printLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 38,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Executes the Duke command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param tasks   the TaskList to perform modifications on."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param ui      the Ui Object to perform output on."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param storage the Storage Object to save tasks to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @throws DukeException user friendly error, usually caused by poor input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns a boolean indicating if this Command is an exit Command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return a boolean indicating if this Command is an exit Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public default boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 11
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Parses the given input, and returns a Duke Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param input a String object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return a Duke Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        String[] inputs \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        String command \u003d inputs[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task task \u003d new Todo(inputs[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        echoTaskAdded(task, tasks, ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Todo task description cannot be blank.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String[] strings \u003d inputs[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String desc \u003d strings[0].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String by \u003d strings[1].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        echoTaskAdded(task, tasks, ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Deadline task description or deadline cannot be blank.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String[] strings \u003d inputs[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String desc \u003d strings[0].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String at \u003d strings[1].trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        echoTaskAdded(task, tasks, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Event task description or start time cannot be blank.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! You have no tasks yet.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    int index \u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    for (Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        ui.printLine(String.format(\"%d.%s\", index, task));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        index++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(inputs[1].trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task taskDone \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        taskDone.markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        ui.printLine(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        ui.printLine(String.format(\"%s\", taskDone));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Your task cannot be found!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(inputs[1].trim());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        Task taskRemoved \u003d tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        ui.printLine(\"Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        ui.printLine(String.format(\"%s\", taskRemoved));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! Your task cannot be found!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        String keyword \u003d inputs[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        for (Task task : tasks) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            if (task.description.matches(keyword)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                                matchingTasks.add(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            throw new DukeException(\"Oops! There is no matching task.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        ui.printLine(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        int index \u003d 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        for (Task task : tasks) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            ui.printLine(String.format(\"%d.%s\", index, task));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            index++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                        throw new DukeException(\"Oops! I don\u0027t know what to search for.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public boolean isExit() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return new Command() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    throw new DukeException(\"Oops! You entered an invalid command.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            };"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static void echoTaskAdded(Task task, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ui.printLine(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ui.printLine(String.format(\"%s\", task));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        ui.printLine(String.format(\"Now you have %d tasks in the list.\", tasks.size()));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 170
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Storage(String pathname) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.file \u003d new File(pathname);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Attempts to save a TaskList into the specified file location."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param tasks the TaskList to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void saveTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                File directory \u003d new File(file.getParent());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    directory.mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    String str \u003d String.format(\"D|%d|%s|%s\\n\", task.isDone ? 1 : 0, task.description,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            ((Deadline) task).by);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    String str \u003d String.format(\"E|%d|%s|%s\\n\", task.isDone ? 1 : 0, task.description,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                            ((Event) task).at);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    String str \u003d String.format(\"T|%d|%s\\n\", task.isDone ? 1 : 0, task.description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    fw.write(str);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Loads the TaskList from the specified file. If the file is not found, an"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * empty TaskList will be returned."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return the TaskList that was saved in the specified file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public TaskList loadTasks() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                String[] strings \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                switch (strings[0]) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    tasks.add(new Todo(strings[2], strings[1].equals(\"1\")));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    tasks.add(new Deadline(strings[2], strings[3], strings[1].equals(\"1\")));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    tasks.add(new Event(strings[2], strings[3], strings[1].equals(\"1\")));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "geshuming"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 95
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), at.format(DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return (isDone ? \"x\" : \" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 32
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 16
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private static Ui ui \u003d null;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    private Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns the singleton UI instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @see \u003ca href\u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     *      \"https://nus-cs2103-ay1920s1.github.io/website/se-book-adapted/chapters/designPatterns.html#singleton-pattern\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     *      Textbook reference on Singleton Object\u003c/a\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return the UI instance to perform UI operations."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public static Ui getInstance() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        if (ui \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Returns the next line inputted by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @return the next line inputted by the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public String getNextLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        if (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "geshuming"
        },
        "content": "            return sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        throw new IllegalStateException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * Prints the given object to the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     * @param output the object to be printed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "geshuming"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void printLine(Object output) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 50
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(0, 0);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 10
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    void shouldGenerateCorrectString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Deadline task \u003d new Deadline(\"Lorem Ipsum\", \"12/03/2045 1234\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(\"[D][ ] Lorem Ipsum (by: 12/03/2045 1234)\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 14
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    void shouldGenerateCorrectString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Event task \u003d new Event(\"Lorem Ipsum\", \"12/03/2045 1234\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(\"[E][ ] Lorem Ipsum (at: 12/03/2045 1234)\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 14
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "geshuming"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "geshuming"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "geshuming"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    void shouldGenerateCorrectString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        Todo task \u003d new Todo(\"Lorem Ipsum\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "geshuming"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "geshuming"
        },
        "content": "        assertEquals(\"[T][ ] Lorem Ipsum\", task.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "geshuming"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "geshuming"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "geshuming": 14
    }
  }
]
