[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "run {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "// Set up JUnit"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "// Set up JavaFX"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 34,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] poop"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] wipe ass (by: 2pm)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] read book (by: 02 Dec 2018, 18:00 PM)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] charge phone"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] unplug phone (by: 01 Sep 2018, 21:00 PM)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[E][ ] sell pants (at: 3pm)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] sell bottle"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] eat lunch (by: 02 Dec 2019, 18:00 PM)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[E][ ] poop lunch (at: 3pm)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] sell lunch"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][ ] clear lunch (by: 04 Jan 2020, 19:00 PM)"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 11
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] fly"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] poop"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[E][ ] wash dishes (at: 2pm)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][ ] drink beer (by: 12 Feb 2018, 18:00 PM)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] poop"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a task of type Deadline which contains a date and time"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * of the deadline."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a Deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description of this task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param deadline of this task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"[D]\" + super.toString() + \"(by:\" + this.deadline + \")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 23
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Get the DialogBox for User."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param text provided by the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param img of the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return a DialogBox containing the text and img of the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Get the DialogBox for Duke."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param text reply of Duke."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param img of Duke."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return a DialogBox containing the text and img of Duke."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 68
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a Duke object that is able to keep track of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Create a new Duke with access to duke.txt file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            taskList \u003d new TaskList(storage.loadPreviousTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String run(String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Parser parser \u003d new Parser(taskList, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String response \u003d parser.processCommand(command); //returns string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    //REPLACE THIS WITH MY COMPLETED METHOD!!!!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        //return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return run(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Generate Duke\u0027s welcome message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return a string representing the welcome message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String s1 \u003d ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String s2 \u003d \"Here is the list of tasks from where you\u0027ve left off: \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String s3 \u003d ui.showList(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return s1 + \"\\n\" + s2 + \"\\n\" + s3;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 55,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents all the Exceptions related to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new DukeException with an error message and the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * root error given by java."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param errorMessage logic behind the error that describes the issue with Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param rootError root error given by java."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public DukeException(String errorMessage, Throwable rootError) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(errorMessage, rootError);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new DukeException with an error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param errorMessage logic behind the error that describes the issue with Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 23
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Error shown by Duke when description of a task is empty."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates an error indicating that description of task is empty."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param taskType the specific type of the task given."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param rootError the error given by Java."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public EmptyDescriptionException(String taskType, Throwable rootError) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(\"OOPS!!! The description of a \" + taskType + \" cannot be empty.\", rootError);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a Task of the specific type Event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Event has a time period, specified with /at (Eg \"event read book /at 3pm-5pm)\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates an Event with the given description and duration."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param duration of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Event(String description, String duration) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"[E]\" + super.toString() + \"(at:\" + this.duration + \")\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 22
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greet();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Generate Duke greetings upon start."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String greetings \u003d duke.showWelcome();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetings, dukeImage));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 58
    }
  },
  {
    "path": "src/main/java/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Indicates missing date and time of the task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class MissingDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates an exception with the given error message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param errorMessage that describes the issue with Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public MissingDateTimeException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 12
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Reads and processes the commands given to Duke and returns the appropriate action."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Generates either todo, deadline or event tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a Parser object with the given TaskList, Ui, Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param taskList TaskList that duke keeps track of."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param ui Generates the output string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param storage Accesses the given file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Parser(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Processes the Command given by the user to Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param command String representing the command given to Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return A string representing the reply from Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String processCommand(String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String reply \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // When command is \u0027list\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String list \u003d taskList.printAllTasks();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            reply \u003d \"Here are the tasks in your list:\" + \"\\n\" + list;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String[] sentence \u003d command.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // When command is \u0027done\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (sentence[0].equals(\"done\")) { // Check if the first word is done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    int completedTaskIndex \u003d Integer.parseInt(sentence[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    reply \u003d taskList.markAsDone(completedTaskIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    // If it wasn\u0027t marked before, this would print out a notification saying it is now marked."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    // Save new list to storage"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        storage.saveToFile(taskList.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        reply \u003d ui.showLoadingError();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    throw new UnknownTaskTypeException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.promptDoneCompletion();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.promptList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.promptDoneFormat();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (UnknownTaskTypeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String[] sentence \u003d command.split(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // When command is \u0027delete\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(sentence[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    Task deletedTask \u003d taskList.deleteTask((taskIndex - 1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    reply \u003d ui.showDeletedTask(deletedTask, taskList.numTasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    // Save new list to storage"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        storage.saveToFile(taskList.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        reply \u003d ui.showLoadingError();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    throw new UnknownTaskTypeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.promptDeleteCompletion();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.promptList();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.promptDeleteFormat();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (UnknownTaskTypeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String[] sentence \u003d command.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String keyword \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (sentence[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    keyword \u003d sentence[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.promptFindKeyword();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            reply \u003d ui.showSearchList(taskList.searchFor(keyword));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // Generate new task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (!command.isEmpty()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    Task newTask \u003d Parser.generateNewTask(command);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    taskList.addTask(newTask);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    // Save the new list to storage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        storage.saveToFile(taskList.toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        reply \u003d ui.showLoadingError();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    reply \u003d ui.showAddTask(newTask, taskList.numTasks);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                reply \u003d ui.showErrorMessage(err);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // When command is bye"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            reply \u003d ui.showFarewell();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Generates the appropriate task that matches the command."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param task command to create the task."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return Task that is generated."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @throws DukeException Exceptions specific to Duke"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public static Task generateNewTask(String task) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String type \u003d task.substring(0, task.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String taskDescription \u003d task.substring(task.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            Task newTask \u003d new Task(\"dummy\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // Create the appropriate Task type"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String[] sentence \u003d taskDescription.split(\"/by\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String description \u003d sentence[0];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String deadline \u003d formatDateTime(sentence[1]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    newTask \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new MissingDateTimeException(\"DateTime missing.\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        + \"Please set a deadline. (Eg. deadline read book /by Sunday)\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String[] sentence \u003d taskDescription.split(\"/at\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String description \u003d sentence[0];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String time \u003d sentence[1];"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    System.out.println(time);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    newTask \u003d new Event(description, time);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new MissingDateTimeException(\"Event time period missing.\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        + \"Please set a start and end time. (Eg. event dance /at Mon 2-4pm)\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (StringIndexOutOfBoundsException rootError) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // If task type is correct, the error is due to empty description"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // else the task type is unknown"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            if (task.equals(\"todo\") | task.equals(\"deadline\") | task.equals(\"event\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new EmptyDescriptionException(task, rootError);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new UnknownTaskTypeException();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Formats the date time given as a string."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param deadline to be formatted."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return String representing the formatted date time."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private static String formatDateTime(String deadline) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // Split to individual components"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        deadline \u003d deadline.trim();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String[] dd \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String[] date \u003d dd[0].split(\"/\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String time \u003d dd[1];"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        int hours \u003d Integer.valueOf(time.substring(0,2));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        int minutes \u003d Integer.valueOf(time.substring(2));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        LocalDateTime actualDateTime \u003d LocalDateTime.of(Integer.valueOf(date[2]), Integer.valueOf(date[1]),"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                Integer.valueOf(date[0]), hours, minutes);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // maybe error here"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm a\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String formatted \u003d \" \" + dtf.format(actualDateTime);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 226
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Handles all input and output related to the file associated with Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new Storage which refers to the file of the given filepath."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param filepath used by Duke to store and modify information."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Saves the new list to the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param content of the modified list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @throws IOException Indicates that the given file to duke cannot be accessed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void saveToFile(String content) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        fw.write(content);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Loads the saved tasks from the file to Duke\u0027s current task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return a list representing the tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @throws DukeException Indicating that the file given cannot be loaded."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public ArrayList\u003cTask\u003e loadPreviousTasks() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ArrayList\u003cTask\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String str \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                Task task \u003d txtProcessor(str);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                loadList.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            throw new DukeException(\"File cannot be accessed\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return loadList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Processes a line of text from the file referred to by Storage."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param line from the text file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return the Task generated from this line."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Task txtProcessor(String line) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String details \u003d line.substring(0,6);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        char[] detailsArray \u003d details.toCharArray();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String type \u003d \"\" + detailsArray[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String desc \u003d line.substring(7);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task newTask \u003d new Task(\"dummy\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String[] dd \u003d desc.split(\"by:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String deadline \u003d dd[1].substring(0, dd[1].length() - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String description \u003d dd[0].substring(0, dd[0].length() - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String[] dd \u003d desc.split(\"at:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String deadline \u003d dd[1].substring(0, dd[1].length() - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String description \u003d dd[0].substring(0, dd[0].length() - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask \u003d new Event(description, deadline);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // Read from line to see if task should be marked as done"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String done \u003d \"\" + detailsArray[4];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        boolean isDone \u003d done.equals(\"+\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask.quietMarkAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 96
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represent Tasks and its given description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new Task with the given description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Indicates whether the task is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Mark this task as done and provide notification."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"  \" + this.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Mark this task as done without notification."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void quietMarkAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Convert done state of this Task to a symbol."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return + if task is completed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (isDone ? \"+\" : \" \"); //return \"+\" if done \" \" otherwise"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Get the description of this task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return description of this task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 60
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represent the list of tasks for Duke to keep track of."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public int numTasks \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private ArrayList\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new empty TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new Tasklist with the given tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param allTasks representing the current tasks saved in the text file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e allTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.allTasks \u003d allTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.numTasks \u003d allTasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Adds a new task to this TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param newTask new task to be added."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        numTasks++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks.add(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        //System.out.println(tasks.get(numTasks-1));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Print all the tasks on the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String printAllTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d numTasks; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            //System.out.println(i + \".\" + allTasks.get(i - 1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            output \u003d output + i + \".\" + allTasks.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Mark the task of the given index as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param index of the task to be marked."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String markAsDone(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String reply \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task completedTask \u003d allTasks.get(index - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (!completedTask.isDone()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            reply \u003d completedTask.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Deletes the Task of the give index from the TaskList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param index of the task to be deleted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task deletedTask \u003d allTasks.get(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks.remove(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        numTasks--;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Search for the keyword given in this TaskList."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param keyword Representing the word we want to search for."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return A TaskList of the filtered tasks containing this keyword."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public TaskList searchFor(String keyword) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ArrayList\u003cTask\u003e relevant \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        for (Task task : allTasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                relevant.add(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return new TaskList(relevant);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        for (Task task : allTasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            output \u003d output + task + System.lineSeparator();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 99
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a task of type ToDo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new ToDo task with the given description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Handles the input and output of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the welcome message of Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return greetings;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Inform users that the file cannot be loaded."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"File cannot be loaded\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Indicate that the task has been successfully added to the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param newTask new task to be added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param numTasks current number of tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showAddTask(Task newTask, int numTasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String s1 \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String s2 \u003d \"  \" + newTask.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String s3 \u003d \"Now you have \" + numTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return s1 + \"\\n\" + s2 + \"\\n\" + s3;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Print out all the tasks that are currently in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param tasks list of all tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showList(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return tasks.printAllTasks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the farewell message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showFarewell() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String farewell \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return farewell;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the given error message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param e error given"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Indicates that the given task has been successfully deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param deletedTask deleted task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param numTasks number of tasks left in the list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showDeletedTask(Task deletedTask, int numTasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + \"  \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + deletedTask"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\", numTasks));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the list of Tasks that are relevant."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param filteredList of tasks related to the keyword."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String showSearchList(TaskList filteredList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String header \u003d (\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String list \u003d filteredList.printAllTasks();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return header + \"\\n\" + list;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Error with accessing an item not on the list. Prompts for user to check again by calling list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String promptList() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return \"OOPS!!! That task is not on the list, please check the list again by calling \u0027list\u0027.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incomplete done command. Prompts for the index of the task to be marked as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String promptDoneCompletion() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return \"Which task on the list have you completed? (Eg \u0027done 2\u0027)\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incorrect format for done command. Prompts for an integer index."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String promptDoneFormat() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return \"OOPS!!! Wrong format. Please key in a valid number (Eg \u0027done 2\u0027)\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incomplete delete command. Prompts for the index of the task to be deleted."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String promptDeleteCompletion() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return \"Which task on the list would you like to delete? (Eg. \u0027delete 2\u0027)\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incorrect format for delete command. Prompts for an integer index."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String promptDeleteFormat() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return \"OOPS!!! Wrong format. Please key in a valid number (Eg \u0027delete 2\u0027)\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String promptFindKeyword() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return \"Please key in a keyword to search for. (Eg \u0027find book\u0027)\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 119
    }
  },
  {
    "path": "src/main/java/UnknownTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents an unknown command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class UnknownTaskTypeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new exception that indicates that Duke does not understand the given command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public UnknownTaskTypeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 11
    }
  },
  {
    "path": "src/main/java/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] poop"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][ ] swim (by: 02 Dec 2019, 18:00 PM)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[E][ ] swim (at: 2-3pm)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[ ] dummy"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[E][ ] Eat lunch (at: 1pm-2pm)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][ ] Wash dishes (by: 02 Dec 2019, 18:00 PM)"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 6
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Deadline dead \u003d new Deadline(\"swim \", \" 02 Dec 2019, 18:00 PM\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\"[D][ ] swim (by: 02 Dec 2019, 18:00 PM)\", dead.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 12
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Event event \u003d new Event(\"Cook lunch \", \" 11am - 12pm Today\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\"[E][ ] Cook lunch (at: 11am - 12pm Today)\", event.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 12
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    // Create dummy TaskList object with some Tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private TaskList createDummyTaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks.add(new ToDo(\"Cook lunch\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks.add(new Event(\"Eat lunch \", \" 1pm-2pm\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks.add(new Deadline(\"Wash dishes \", \" 02 Dec 2019, 18:00 PM\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        TaskList tl \u003d new TaskList(allTasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return tl;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testAddTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // Check if the number of tasks increased by 1."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        TaskList taskList \u003d createDummyTaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(3, taskList.numTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        taskList.addTask(new Task(\"random task\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(4, taskList.numTasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testMarkAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // Check if the new task added is marked as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummyTask \u003d new ToDo(\"random task\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        taskList.addTask(dummyTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        taskList.markAsDone(1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(true, dummyTask.isDone());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void deleteTask() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // Check that number of tasks decreased by 1."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        TaskList taskList \u003d createDummyTaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        int originalLength \u003d taskList.numTasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        taskList.deleteTask(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(originalLength - 1, taskList.numTasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void searchFor() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        TaskList taskList \u003d createDummyTaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        TaskList filtered \u003d taskList.searchFor(\"Cook\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(1, filtered.numTasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        TaskList taskList \u003d createDummyTaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\"[T][ ] Cook lunch\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + \"[E][ ] Eat lunch (at: 1pm-2pm)\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + \"[D][ ] Wash dishes (by: 02 Dec 2019, 18:00 PM)\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + System.lineSeparator(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                taskList.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 66
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    //Create dummy object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Task createDummyTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummyTask \u003d new Task(\"random activity\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return dummyTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void isDone_default_shouldBeFalse() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummyTask \u003d createDummyTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(false, dummyTask.isDone());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testMarkAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummy \u003d createDummyTask();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(false, dummy.isDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        dummy.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(true, dummy.isDone());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testQuietMarkAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummy \u003d createDummyTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(false, dummy.isDone());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        dummy.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(true, dummy.isDone());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void getStatusIcon_notDone_negative() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummy \u003d createDummyTask();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\" \", dummy.getStatusIcon());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void getStatusIcon_isDone_positive() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummy \u003d createDummyTask();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        dummy.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\"+\", dummy.getStatusIcon());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testGetDescription() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummy \u003d createDummyTask();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\"random activity\", dummy.getDescription());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task dummy \u003d createDummyTask();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\"[ ] random activity\", dummy.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 60
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Count stars\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        assertEquals(\"[T][ ] Count stars\", todo.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 12
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here is the list of tasks from where you\u0027ve left off: "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "../../../data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "file error"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] read book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "June 6th"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "6th"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][ ] read book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[T][ ] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][+] read book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][+] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[T][ ] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Which task on the list have you completed? (Eg \u0027done 2\u0027)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! Wrong format. Please key in a valid number (Eg \u0027done 2\u0027)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! That task is not on the list, please check the list again by calling \u0027list\u0027."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Event time period missing. Please set a start and end time. (Eg. event dance /at Mon 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [E][ ] swim (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "DateTime missing. Please set a deadline. (Eg. deadline read book /by Sunday)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [D][ ] shower (by: Sunday)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][+] read book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[T][ ] borrow book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "5.[E][ ] swim (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "6.[D][ ] shower (by: Sunday)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Which task on the list would you like to delete? (Eg. \u0027delete 2\u0027)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! Wrong format. Please key in a valid number (Eg \u0027delete 2\u0027)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] borrow book"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][+] read book"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[E][ ] swim (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "5.[D][ ] shower (by: Sunday)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 61
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done five"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event swim /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event swim /at Mon 2-4pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline shower /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline shower /by Sunday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete four"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 25
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "diff ACTUAL.TXT EXPECTED.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "else"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 33
    }
  }
]
