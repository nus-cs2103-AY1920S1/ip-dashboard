[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private String LINES \u003d \"\\n\" + \"____________________________________________________________\" + \"\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private ArrayList list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        System.out.println(display(\"Hello! I\u0027m Duke\\nWhat can I do for you?\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        while (!s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            String[] strArr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            } else if (strArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                done(s, strArr);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            } else if (strArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                delete(s, strArr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                addTask(s, strArr);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private void printList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.print(LINES);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.println(\"Here are the task in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size() - 1; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                System.out.println(i + 1 + \".\" + list.get(i));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.print(list.size() + \".\" + list.get(list.size() - 1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.println(LINES);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.println(display(\"Your list is empty.\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private void done(String s, String[] strArr) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            if (s.length() \u003c 6) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                throw new DukeException(\"Please write in this format: done X\\nWhere X is a number in the list\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            int pos \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            Task doneTask \u003d ((Task) list.get(pos)).markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.println(display(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                            + doneTask));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.print(display(e.getMessage()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.print(display(\"Please input a number that is within the list\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private void delete(String s, String[] strArr) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            if (s.length() \u003c 7) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                throw new DukeException(\"Please write in this format: delete X\\nWhere X is a number in the list\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            int pos \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            Task removedTask \u003d (Task) list.remove(pos);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.println(display(\"Noted. I\u0027ve removed this task:\\n  \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                            + removedTask"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                            + \"\\nNow you have \" + list.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.print(display(e.getMessage()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.print(display(\"Please input a number that is within the list\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private void addTask(String s, String[] strArr) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        Task task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            if (strArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                if (s.length() \u003c 6) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                String description \u003d s.substring(5);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            } else if (strArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                if (s.length() \u003c 10) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                String[] temp \u003d s.split(\"/by\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                    throw new DukeException(\"Please specify the deadline time using /by.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                String description \u003d temp[0].substring(9).trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                String by \u003d temp[1].trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            } else if (strArr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                if (s.length() \u003c 7) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                String[] temp \u003d s.split(\"/at\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                    throw new DukeException(\"Please specify the event time using /at.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                String description \u003d temp[0].substring(6).trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                String at \u003d temp[1].trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                // Not an action"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.println(display(\"Got it. I\u0027ve added this task:\\n  \" + task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "                    + \"\\nNow you have \" + list.size() + \" tasks in the list.\"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            System.out.print(display(e.getMessage()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "            assert false : \"Uncaught exception\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        System.out.println(display(\"Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    private String display(String text) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        return LINES + text + LINES;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Chen Hui": 141
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "  [T]✘ something"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "todo something"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chen Hui"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Chen Hui": 34
    }
  }
]
