[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 39,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "T | 0 | read books"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Duke is for those who prefer to use a desktop app for managing tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "1. List tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "2. Mark task as done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "3. Delete task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "4. Find task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "5. Add task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "6. Bye"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `todo (description)` - Add a Todo task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "A todo task will be added with the task name`(description)`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`todo read books`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `[T][✗] read books`  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Now you have 1 task in the list.`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `event (description) /at (period)` - Add an Event task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "An event task will be added with the task name `(description)` and `(period)`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`event project meeting /at 03/03/2019 1400-1600`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Got it. I\u0027ve added this task:`   "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `[E][✗] project meeting (at: 3rd of March 2019, 2:00pm to 4:00pm)`  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `deadline (description) /by (deadline)` - Add a Deadline task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "A deadline task will be added with the task name `(description)` and `(deadline)`."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`deadline return books /by 03/03/2019 1400`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `[D][✗] return books (by: 3rd of March 2019, 2:00pm)`  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `(description) /after (afterWhen)` - Add a DoAfter task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "A DoAfter task will be added with the specified `(description)` and `(afterWhen)`.  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`return books /after 01/02/2013 1400`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `[DA][✗] return books (after: 1st of February 2013, 2:00pm)`  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Now you have 1 task in the list.`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `list` - List all the tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "All the tasks in the list will be shown."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Here are the tasks in your list:`  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`1.[T][✗] read books`  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`2.[E][✗] project meeting (at: 3rd of March 2019, 2:00pm to 4:00pm)`  "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`3.[D][✗] return books (by: 3rd of March 2019, 2:00pm)`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `done (task number)` - Mark task as done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "The task with that particular task number will be marked as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `[E][✓] project meeting (at: 3rd of March 2019, 2:00pm to 4:00pm)`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `delete (task number)` - Delete a task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "The task with that particular task number will be deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " Example of usage:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `delete 2`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Noted. I\u0027ve removed this task:`  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `[E][✓] project meeting (at: 3rd of March 2019, 2:00pm to 4:00pm)`  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `find (keyword)` - Find a task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "Find a task by searching for that particular `(keyword)`."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " Example of usage:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `find books`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " `Here are the matching tasks in your list:`  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`1.[DA][✗] return books (after: 1st of February 2013, 2:00pm)`  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`2.[T][✗] read books`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "### `bye` - Exit from the application"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "A goodbye message will be shown and the application will close."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "`Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 110,
      "-": 17
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Command class makes use of multiple classes to drive the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a Command object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param command A string representation of the user\u0027s command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Responds accordingly to the user\u0027s command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks A TaskList object containing the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param ui An Ui object that helps to interact with the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param storage A Storage object that contains a file with the tasks in it."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return  A string of Duke\u0027s response."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        Scanner sc \u003d new Scanner(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String action \u003d sc.next();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return ui.showBye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return ui.listTask(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            int number \u003d sc.nextInt();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (!tasks.getList().get(number - 1).isDone()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert number - 1 \u003c\u003d tasks.size() \u0026\u0026 number \u003e\u003d 1 :"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            \"Task number is not within task list\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    tasks.markDone(number);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    storage.updateDone(number, tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    return ui.printDone(number, tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert tasks.getList().get(number - 1).isDone() :"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            \"Task should already be done\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    return \"Task is already done.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return \"Task number is invalid.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert action.equals(\"todo\") : \"Command should be: todo\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String taskname \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (taskname.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert taskname.equals(\"\") : \" Task name should be empty\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                assert !taskname.equals(\"\") : \"Task name should not be empty\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                Task t \u003d new Todo(taskname);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                storage.addTask(storage.generateTaskHeader(\"Todo\"),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        taskname, \"\", tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return ui.printAdd(t, tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert action.equals(\"deadline\") : \"Command should be: deadline\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String deadline \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (deadline.equals(\"\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert deadline.equals(\"\") : \" Task name should be empty\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                assert !deadline.equals(\"\") : \"Task name should not be empty\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String[] arrDeadline \u003d deadline.split(\"/by\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String timeDeadline \u003d Parser.convertDateAndTime(arrDeadline[1].trim());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                Task taskDeadline \u003d new Deadline(arrDeadline[0].trim(), timeDeadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                storage.addTask(storage.generateTaskHeader(\"Deadline\"),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        arrDeadline[0].trim(), arrDeadline[1].trim(), tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                tasks.add(taskDeadline);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return ui.printAdd(taskDeadline, tasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert action.equals(\"event\") : \"Command should be: event\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String event \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (event.equals(\"\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    assert event.equals(\"\") : \" Task name should be empty\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                assert !event.equals(\"\") : \"Task name should not be empty\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String[] arrEvent \u003d event.split(\"/at\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String time \u003d Parser.convertDateAndTime(arrEvent[1].trim());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                Task taskEvent \u003d new Event(arrEvent[0].trim(), time);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                storage.addTask(storage.generateTaskHeader(\"Event\"),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        arrEvent[0].trim(), arrEvent[1].trim(), tasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                tasks.add(taskEvent);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return ui.printAdd(taskEvent, tasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            int deletionNumber \u003d sc.nextInt();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                storage.delete(deletionNumber, tasks);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                Task toDelete \u003d tasks.getList().get(deletionNumber - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                tasks.delete(deletionNumber);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return ui.printDelete(toDelete, tasks);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return \"Task number is invalid.\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            String keyword \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return ui.printFind(keyword, tasks);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (!sc.hasNextLine()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String input \u003d action + sc.nextLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (!input.contains(\"/after\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String[] doAfterArray \u003d input.split(\"/after\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (doAfterArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"Invalid DoAfter task format\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String after \u003d Parser.convertDateAndTime(doAfterArray[1].trim());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (after.equals(\"\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    throw new DukeException(\"Invalid DoAfter task format\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                Task doAfter \u003d new DoAfter(doAfterArray[0].trim(), after);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                storage.addTask(storage.generateTaskHeader(\"DoAfter\"),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        doAfterArray[0].trim(), doAfterArray[1].trim(), tasks);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                tasks.add(doAfter);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return ui.printAdd(doAfter, tasks);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 156
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Deadline class represents a type of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param description A string representing the description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param by A string representing the deadline of that task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets the task description, deadline and status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 28
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a DialogBox based on the input string and input image."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param text A text of input by user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param img User\u0027s profile image."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A DialogBox containing the text on the left"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *     and profile image on the right."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a DialogBox based on the input string and input image."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param text A string of output by Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param img Duke\u0027s profile image."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A DialogBox containing the profile image on the left"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *     and text on the right."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 75
    }
  },
  {
    "path": "src/main/java/DoAfter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The DoAfter class represents a type of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class DoAfter extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    protected String after;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a DoAfter task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param description A string representing the description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param after A string representing task that need to be done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *              after a certain time."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public DoAfter(String description, String after) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        this.after \u003d after;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets the task description, time and status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return \"[DA]\" + super.toString() + \" (after: \" + after + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Duke class handles the input of the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param filePath A string representing the directory of the file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a response based on the user\u0027s input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param input A string of input provided by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of Duke\u0027s response based on the input by user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String s \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 30,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * A DukeException class that extends from Exception class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a DukeException object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param mesg A string representing the exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public DukeException(String mesg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        super(mesg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Event class represents a type of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    protected String when;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a Task of type Event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param desription A string representing the task\u0027s description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param when A string representing time of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public Event(String desription, String when) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        super(desription);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        this.when \u003d when;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets the task description, time and status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + when + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 29
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Initialize the layout of the scrollPane and dialogContainer."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE); //"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                DialogBox.getDukeDialog(ui.showWelcome(), dukeImage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Set the Duke object in the class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param d A duke object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            TimerTask task \u003d new TimerTask() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            timer.schedule(task, 500);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 76
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Parser class deals with making sense of the user\u0027s command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets a Command object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param command A string representing the user\u0027s command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A Command object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return new Command(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets the string representation of a date by converting them from dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * to english sentences."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param time A string representing date in the form of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string representation of a date in english sentences."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public static String convertDateAndTime(String time) { // in the form of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String[] array \u003d time.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String day \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        if (array.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            String[] dateArray \u003d array[0].split(\"/\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            if (dateArray.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if ((dateArray[0].equals(\"1\") || dateArray[0].equals(\"01\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        || dateArray[0].equals(\"21\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        || dateArray[0].equals(\"31\"))) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d Integer.valueOf(dateArray[0]) + \"st\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                } else if ((dateArray[0].equals(\"2\") || dateArray[0].equals(\"02\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        || dateArray[0].equals(\"22\"))) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d Integer.valueOf(dateArray[0]) + \"nd\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                } else if ((dateArray[0].equals(\"3\") || dateArray[0].equals(\"03\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        || dateArray[0].equals(\"23\"))) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d Integer.valueOf(dateArray[0]) + \"rd\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d Integer.valueOf(dateArray[0]) + \"th\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                switch (dateArray[1]) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"1\": case \"01\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of January \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"2\": case \"02\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of February \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"3\": case \"03\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of March \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"4\": case \"04\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of April \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"5\": case \"05\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of May \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"6\": case \"06\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of June \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"7\": case \"07\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of July \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"8\": case \"08\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of August \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"9\": case \"09\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of September \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"10\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of October \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"11\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of November \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"12\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    day \u003d day + \" of December \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                day \u003d day + dateArray[2] + \", \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String rawTime \u003d array[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String[] timeArray \u003d rawTime.split(\"-\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    if (timeArray.length \u003d\u003d 1) { // deadline"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        SimpleDateFormat input \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        SimpleDateFormat output \u003d new SimpleDateFormat(\"hh:mmaa\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        Date date \u003d input.parse(rawTime);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        String outputString \u003d output.format(date);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        if (outputString.charAt(0) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            day \u003d day + outputString.substring(1).toLowerCase();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            day \u003d day + outputString.toLowerCase();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    } else if (timeArray.length \u003d\u003d 2) { // event"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        SimpleDateFormat input \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        SimpleDateFormat output \u003d new SimpleDateFormat(\"hh:mmaa\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        Date start \u003d input.parse(timeArray[0]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        Date end \u003d input.parse(timeArray[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        String startTime \u003d output.format(start).toLowerCase();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        String endTime \u003d output.format(end).toLowerCase();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        if (startTime.charAt(0) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            startTime \u003d startTime.substring(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        if (endTime.charAt(0) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            endTime \u003d endTime.substring(1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        day \u003d day + startTime + \" to \" + endTime;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                return time;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return time;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 125
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * A Storage class that deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a Storage object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param filePath A string that represents the directory of a file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                file.mkdir();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Updates the task in the file to be marked as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param number An int representing the task number."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void updateDone(int number, TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            Scanner scanFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (i \u003d\u003d number) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    if (i \u003d\u003d tasks.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        s \u003d s + scanFile.nextLine().replaceFirst(\"0\", \"1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        s \u003d s + scanFile.nextLine().replaceFirst(\"0\", \"1\") + System.lineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    if (i \u003d\u003d tasks.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        s \u003d s + scanFile.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        s \u003d s + scanFile.nextLine() + System.lineSeparator();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fw.write(s);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(\"Invalid task number.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Loads the tasks in the file into an ArrayList of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return An ArrayList containing tasks from the file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                String type \u003d sc.next();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String todo \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String[] todoArray \u003d todo.split(\"\\\\|\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    Task todoTask \u003d new Todo(todoArray[2].trim());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    if (todoArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        todoTask.markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    tasks.add(todoTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String deadline \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String[] deadlineArray \u003d deadline.split(\"\\\\|\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    Task deadlineTask \u003d new Deadline(deadlineArray[2].trim(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            Parser.convertDateAndTime(deadlineArray[3].trim()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    if (deadlineArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String event \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String[] eventArray \u003d event.split(\"\\\\|\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    Task eventTask \u003d new Event(eventArray[2].trim(), Parser.convertDateAndTime(eventArray[3].trim()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    if (eventArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        eventTask.markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    tasks.add(eventTask);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                case \"DA\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String doAfter \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    String[] doAfterArray \u003d doAfter.split(\"\\\\|\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    Task doAfterTask \u003d new DoAfter(doAfterArray[2].trim(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                            Parser.convertDateAndTime(doAfterArray[3].trim()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    if (doAfterArray[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        doAfterTask.markAsDone();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    tasks.add(doAfterTask);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Add the task to the file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param taskHeader A string reprensentation of the task header."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param description A string representation of the task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param time A string representation of the time."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks An ArrayList containing tasks from the file."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void addTask(String taskHeader, String description, String time, TaskList tasks) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            FileWriter append \u003d new FileWriter(\"data/duke.txt\", true);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                append.write(\"\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            if (time.equals(\"\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                append.write(taskHeader + description);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                append.write(taskHeader + description + \" | \" + time);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            append.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates the header for the different task."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param task A string identifier for the type of task."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A String representing the task header."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String generateTaskHeader(String task) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        switch (task) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"Todo\":"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return \"T | 0 | \";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"Deadline\":"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return \"D | 0 | \";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"Event\":"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return \"E | 0 | \";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        case \"DoAfter\":"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return \"DA | 0 | \";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Deletes a task from the file."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param deletionNumber An int representing the task number of the task to be deleted."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void delete(int deletionNumber, TaskList tasks) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            Scanner scanFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                if (i \u003d\u003d deletionNumber) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    scanFile.nextLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                } else if (i \u003d\u003d tasks.size()"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                        || (i \u003d\u003d tasks.size() - 1 \u0026\u0026 tasks.size() \u003d\u003d deletionNumber)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    s \u003d s + scanFile.nextLine();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }  else {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                    s \u003d s + scanFile.nextLine() + System.lineSeparator();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fw.write(s);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(\"File does not exist.\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(\"Task does not exist.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 206
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Task class represents the things to do."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param description A string representation of the task\u0027s description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets a string representation of whether the task is done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string that is either a tick or X symbol depending on whether the task is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Mark the task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets the task description and an icon depending on whether it is done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 51
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The TaskList class contains the task list and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * has methods to modify the tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates the TaskList object that contains an ArrayList of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks An ArrayList of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * The size of the ArrayList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return An int representing how many tasks the ArrayList contains"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Get the ArrayList containing the tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return An ArrayList containing tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Add tasks to the ArrayList of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param t A task that will be added to the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Delete tasks from the ArrayList of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param deletionNumber An int representing the task to be deleted from the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void delete(int deletionNumber) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        tasks.remove(deletionNumber - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Mark a task in the ArrayList as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param number An int representing the task to be marked as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void markDone(int number) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        tasks.get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 65
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Todo class represents a task of type Todo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Creates a Todo task object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param description A string representation of the task\u0027s description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Gets the task description and status."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " * The Ui class provides methods to deal with user interactions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a string of welcome text to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of welcome text."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return \"Hi. I am Duke!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a sentence bidding goodbye to user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of farewell text."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a string of text when an object is added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param t The task to be added to the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks A TaskList object that contains an ArrayList of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of text when an object is added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String printAdd(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String s \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                + \"  \" + t + \"\\n\" + \"Now you have \" + tasks.size() + \" \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                + (tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a string of text when an object is deleted from the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param toDelete The task to be deleted from the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks A TaskList object that contains an ArrayList of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of text when an object is deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String printDelete(Task toDelete, TaskList tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String s \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                + \"  \" + toDelete + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                + (tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates a string of text when an object is done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param number An int representing which task to be marked as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks A TaskList object that contains an ArrayList of task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of text when an object is done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String printDone(int number, TaskList tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String s \u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                + \"  \" + tasks.getList().get(number - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Generates the list of tasks stored in the ArrayList in string."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks A TaskList object that contains an ArrayList of Task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of tasks stored in the ArrayList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String listTask(TaskList tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String s \u003d \"Here are the \" + (tasks.getList().size() \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in your list:\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            s \u003d s + \"\\n\" + i + \".\" + tasks.getList().get(i - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * Find the tasks in the list based on the keyword."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param keyword A string used to search for the relevant tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @param tasks A TaskList object that contains an ArrayList of Task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     * @return A string of tasks based on the keyword."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public String printFind(String keyword, TaskList tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String s \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            if (tasks.getList().get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                s \u003d s + \"\\n\" + count + \".\" + tasks.getList().get(i);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 99
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void convert() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        String s \u003d \"1/2/2013 0000\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        assertEquals(\"1st of February 2013, 12:00am\", Parser.convertDateAndTime(s));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 11
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void size() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        Task task \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        assertEquals(1, tasks.size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    public void delete() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        Task task \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        tasks.delete(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "        assertEquals(0, tasks.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JohnNzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JohnNzj": 24
    }
  }
]
