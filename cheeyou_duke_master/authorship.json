[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 15,
      "-": 19
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class DialogBox {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 2
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class DialogBox extends HBox{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 46
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import com.sun.scenario.effect.impl.sw.sse.SSEBlend_SRC_OUTPeer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.extension.expense.Expense;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.extension.expense.ExpenseList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.logic.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * The main class in this programme."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/chris.jpg\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/jason.jpg\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private ExpenseList listOfAllExpenses;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listOfAllExpenses \u003d storage.getTempExpenseList(); //Since storage has been loaded, the tempExpenseList is stored"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        ui.showWelcome(); //can take this out and put it at the start of the initial programme"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Parser inputParser \u003d new Parser(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        inputParser.parse();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String command \u003d inputParser.getCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String taskDetails \u003d inputParser.getTaskDetails();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showBye();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                StringBuilder listBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                listBuilder.append(ui.showSeparationLine());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                if (tasks.getListOfTasks().isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    listBuilder.append(\"Sorry, there are no tasks in the list\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    listBuilder.append(\"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    listBuilder.append(tasks.printList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    listBuilder.append(ui.showSeparationLine());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return listBuilder.toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(taskDetails);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                Task newlyDoneTask \u003d tasks.getTask(taskNumber - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                tasks.setTaskAsDone(taskNumber - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                storage.write(tasks.getListOfTasks(), listOfAllExpenses.getExpenseCategories());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showDone(newlyDoneTask);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(taskDetails);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                Task taskToBeDeleted \u003d tasks.getTask(taskNumber - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                tasks.deleteTask(taskNumber - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                int newSizeOfList \u003d tasks.getListOfTasks().size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                storage.write(tasks.getListOfTasks(), listOfAllExpenses.getExpenseCategories());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showDelete(taskToBeDeleted, newSizeOfList);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String keyword \u003d taskDetails;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showMatchingTasks(tasks.find(keyword));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                if (taskDetails.equals(\"\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    throw new DukeException(\"      :( OOPS!!! The description of a \" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                            command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    newTask \u003d new Todo(taskDetails);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    //replace the first / so that the dates will not be split up"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    taskDetails \u003d taskDetails.replaceFirst(\"/\", \":\");  //need to assign this to tempString so it is re-recorded"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    String[] tempStringArr \u003d taskDetails.split(\":\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    String description \u003d ((String) Array.get(tempStringArr, 0)).trim();  //to remove ending whitespace"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    String secondString \u003d ((String) Array.get(tempStringArr, 1)).substring(3);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                        newTask \u003d new Deadline(description, secondString);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                        newTask \u003d new Event(description, secondString);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    throw new IllegalArgumentException(\"OOPS, no such event type!\");  //should take this redundancy out and make the entire thing try catch"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                tasks.addTask(newTask);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                int newSizeOfList \u003d tasks.getListOfTasks().size();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                storage.write(tasks.getListOfTasks(), listOfAllExpenses.getExpenseCategories());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showAdd(newTask, newSizeOfList);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"spending\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                //Format: Finance {category} {amount} {description}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                taskDetails \u003d taskDetails.replaceFirst(\" \", \":\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                taskDetails \u003d taskDetails.replaceFirst(\" \", \":\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String[] tempStringArr \u003d taskDetails.split(\":\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String category \u003d ((String) Array.get(tempStringArr, 0));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String amountInString \u003d ((String) Array.get(tempStringArr, 1));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String description \u003d ((String) Array.get(tempStringArr, 2));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                Expense newExpense \u003d new Expense(Double.parseDouble(amountInString), description);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                listOfAllExpenses.addExpense(category, newExpense);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                storage.write(tasks.getListOfTasks(), listOfAllExpenses.getExpenseCategories());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showAddedExpense(newExpense);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"expenses\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return listOfAllExpenses.printList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"delexp\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String[] tempStringArr \u003d taskDetails.split(\" \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String category \u003d ((String) Array.get(tempStringArr, 0));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                int number \u003d Integer.parseInt((String) Array.get(tempStringArr, 1));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                Expense deletedExpense \u003d listOfAllExpenses.deleteExpense(category, number - 1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                storage.write(tasks.getListOfTasks(), listOfAllExpenses.getExpenseCategories());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showDeletedExpense(deletedExpense);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else if (command.equals(\"glossary\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return ui.showGlossary();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else {//all other keywords not part of Duke\u0027s task handling schedule"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                throw new DukeException(\"      OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } catch (DukeException | IllegalArgumentException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            return ui.showSeparationLine() + e.getMessage() + ui.showSeparationLine() + ui.showBlankLine();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        });"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        });"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        );"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //pass the string input to duke, duke should then run this and return a string that can be passed into the label."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.run(input);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cheeyou": 260,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 13
    }
  },
  {
    "path": "src/main/java/duke/extension/expense/Expense.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.extension.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Creaates an expense item for this programme"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Expense {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private double amount;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Expense(double amount, String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public double getAmount() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.amount;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string representation of the expense."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string representation of expense"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "       StringBuilder expenseBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "       expenseBuilder.append(\"$ \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "       expenseBuilder.append(String.format(\"%.2f\", amount));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "       expenseBuilder.append(\"\\n    \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "       expenseBuilder.append(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "       return expenseBuilder.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 36
    }
  },
  {
    "path": "src/main/java/duke/extension/expense/ExpenseCategory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.extension.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class ExpenseCategory {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String categoryName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private ArrayList\u003cExpense\u003e expenses;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private double sumOfExpenses;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ExpenseCategory(String categoryName, ArrayList\u003cExpense\u003e expenses) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.categoryName \u003d categoryName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.expenses \u003d expenses;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        sumOfExpenses \u003d 0.0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getCategoryName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return categoryName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ArrayList\u003cExpense\u003e getExpenses() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.expenses;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public double getSumOfExpenses() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.sumOfExpenses;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void add(Expense expense) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.expenses.add(expense);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        sumOfExpenses +\u003d expense.getAmount();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Expense delete(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Expense expenseRemoved \u003d this.expenses.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        sumOfExpenses -\u003d expenseRemoved.getAmount();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.expenses.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return expenseRemoved;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String printExpenses() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder expensesBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        int expenseId \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expensesBuilder.append(categoryName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expensesBuilder.append(\":\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (Expense expense : expenses) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            expensesBuilder.append(expenseId);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            expensesBuilder.append(\". \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            expensesBuilder.append(expense);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            expensesBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            expenseId++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expensesBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expensesBuilder.append(\"Sum:    $ \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expensesBuilder.append(String.format(\"%.2f\", sumOfExpenses));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expensesBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return expensesBuilder.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 59
    }
  },
  {
    "path": "src/main/java/duke/extension/expense/ExpenseList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.extension.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class ExpenseList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private ArrayList\u003cExpenseCategory\u003e expenseCategories;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ExpenseList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Food\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Transport\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Education\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Household\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Apparel\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Beauty\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Health\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Social\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseCategories.add(new ExpenseCategory(\"Others\", new ArrayList\u003cExpense\u003e()));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ArrayList\u003cExpenseCategory\u003e getExpenseCategories() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.expenseCategories;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void addExpense(String expenseType, Expense newExpense) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (ExpenseCategory category : expenseCategories) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if (expenseType.toLowerCase().equals(category.getCategoryName().toLowerCase())) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                category.add(newExpense);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if (category.equals(\"others\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                throw new IllegalArgumentException(\"OOPS, this is not an expense category.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Expense deleteExpense(String expenseType, int index) throws ArrayIndexOutOfBoundsException,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            IllegalArgumentException{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (ExpenseCategory category : expenseCategories) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if (expenseType.toLowerCase().equals(category.getCategoryName().toLowerCase())) {   //getCategoryName()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                int categorySize \u003d category.getExpenses().size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                if (index \u003e categorySize || index \u003c 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    throw new ArrayIndexOutOfBoundsException(\"OOPS, please key in an index between 1 to \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                            + categorySize + \"for this category: \" + category.getCategoryName());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                Expense deletedExpense \u003d category.delete(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                return deletedExpense;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        throw new IllegalArgumentException(\"OOPS, this is not an expense category.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private double totalExpenses() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        double sumOfExpenses \u003d 0.0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for(ExpenseCategory category : expenseCategories) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            sumOfExpenses +\u003d category.getSumOfExpenses();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return sumOfExpenses;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder listBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listBuilder.append(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listBuilder.append(\"Here is the list of all expenses by category: \\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (ExpenseCategory category : expenseCategories) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listBuilder.append(category.printExpenses());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listBuilder.append(\"Total expenses: $ \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listBuilder.append(this.totalExpenses());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listBuilder.append(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return listBuilder.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 77
    }
  },
  {
    "path": "src/main/java/duke/logic/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Handles exceptions thrown by methods and classes in this programme."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 10
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Deals with interpreting user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String inputString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String taskDetails;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Parser(String inputString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.inputString \u003d inputString.toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Separates user input into command and task details."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void parse() {   //cannot use \"|\" as a replacement"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String temp \u003d this.inputString.replaceFirst(\" \", \":\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String[] tempArr \u003d temp.split(\":\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        command \u003d (String) Array.get(tempArr, 0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        if (tempArr.length \u003e 1) {  //account for the fact that commands like \"list\" do not have duke.task details"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            taskDetails \u003d ((String) Array.get(tempArr, 1)).trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        System.out.println(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        System.out.println(taskDetails);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns the user command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return user command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns the task details."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return task details."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.taskDetails;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 48
    }
  },
  {
    "path": "src/main/java/duke/logic/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.extension.expense.Expense;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.extension.expense.ExpenseCategory;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.extension.expense.ExpenseList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Represents a storage space that stores a file path."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private ExpenseList tempExpenseList; //might wanna find a better way to do this"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Rewrites file data with text to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param filePath the representation of the path of the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param textToAdd text to be added to file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @throws IOException when I/O operations fail."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private void rewriteFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Appends text to be added to the end of the file data."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param filePath the representation of the path of the file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param textToAppend text to be appended to file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @throws IOException when I/O operations fail."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Rewrites the file data with new data from an ArrayList\u003cTask\u003e \u003c/Task\u003e."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param taskList the ArrayList\u003cTask\u003e \u003c/Task\u003e to be used."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param expensesList the ArrayList\u003cExpenseCategory\u003e \u003c/ExpenseCategory\u003e to be used."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void write(ArrayList\u003cTask\u003e taskList, ArrayList\u003cExpenseCategory\u003e expensesList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //Store all the latest data from the ArrayList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            rewriteFile(this.filePath, \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            System.err.println(\"Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            StringBuilder dataBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dataBuilder.append(task.getTaskType());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dataBuilder.append(\" : \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if (task.isDone()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                dataBuilder.append(1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                dataBuilder.append(0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dataBuilder.append(\" : \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dataBuilder.append(task.getDescription());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if ((task instanceof Event) || (task instanceof Deadline)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                dataBuilder.append(\" : \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                if (task instanceof Event) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    dataBuilder.append(((Event) task).getExactDuration());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    dataBuilder.append(((Deadline) task).getExactBy());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                appendToFile(this.filePath, dataBuilder.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                System.err.println(\"Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            appendToFile(this.filePath, \"-----\" + System.lineSeparator());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            System.err.println(\"Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (ExpenseCategory expenseCategory : expensesList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            StringBuilder dataBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dataBuilder.append(expenseCategory.getCategoryName());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                appendToFile(this.filePath, dataBuilder.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                System.err.println(\"Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            for(Expense expense : expenseCategory.getExpenses()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                StringBuilder dataBuilder1 \u003d new StringBuilder();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                dataBuilder1.append(expense.getAmount());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                dataBuilder1.append(\" : \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                dataBuilder1.append(expense.getDescription());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    appendToFile(this.filePath, dataBuilder1.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    System.err.println(\"Error: \" + e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Loads data from a file into an ArrayList\u003cTask\u003e \u003c/Task\u003e."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return an ArrayList\u003cTask\u003e \u003c/Task\u003e with data from file."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @throws FileNotFoundException If file cannot be found."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        ArrayList\u003cTask\u003e taskListToBeLoaded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        ExpenseList expenseListToBeLoaded \u003d new ExpenseList();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String nextDataLine;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        while(s.hasNextLine()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            nextDataLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if(nextDataLine.equals(\"-----\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String[] temp \u003d nextDataLine.split(\" : \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                String task \u003d (String) Array.get(temp, 0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                for (int i \u003d 0; i \u003c temp.length; i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    System.out.println((String) Array.get(temp, i));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                if (task.equals(\"T\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    newTask \u003d new Todo((String) Array.get(temp, 2));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                } else if (task.equals(\"D\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    newTask \u003d new Deadline((String) Array.get(temp, 2),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                            (String) Array.get(temp, 3));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    newTask \u003d new Event((String) Array.get(temp, 2),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                            (String) Array.get(temp, 3));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                if (((String) Array.get(temp, 1)).equals(\"1\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    newTask.setDone();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                taskListToBeLoaded.add(newTask);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        while(s.hasNextLine()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            s.nextLine(); //\"Food\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            for (int i \u003d 0; i \u003c expenseListToBeLoaded.getExpenseCategories().size(); i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                ExpenseCategory category \u003d expenseListToBeLoaded.getExpenseCategories().get(i);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    nextDataLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    String[] temp \u003d nextDataLine.split(\" : \");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    String nextString \u003d (String) Array.get(temp, 0);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    if (nextString.equals(expenseListToBeLoaded.getExpenseCategories().get(i + 1).getCategoryName())) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                        double amount \u003d Double.parseDouble(nextString);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                        String description \u003d (String) Array.get(temp, 1);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                        category.add(new Expense(amount, description));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        tempExpenseList \u003d expenseListToBeLoaded;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return taskListToBeLoaded;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ExpenseList getTempExpenseList() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return tempExpenseList;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 179
    }
  },
  {
    "path": "src/main/java/duke/logic/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Contains a task list and methods able to perform features on the tasks in the taskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns the stored task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return stored task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Adds a new task to the end of the stored task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param newTask"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Deletes a task from the stored task list given by the index called."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param index Specified index of task in task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        assert index \u003e\u003d 0 : \"index passed to delete a task in taskList should be greater than or equals to zero\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        listOfTasks.remove(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a task in a specified position in the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param index Specified index of task in task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return Task in specified position in task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        assert index \u003e\u003d 0 : \"index should be greater than or equals to zero\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.listOfTasks.get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Sets a task in a specified position in the task list as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param index Specified index of task in task list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void setTaskAsDone(int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Task newlyDoneTask \u003d this.listOfTasks.get(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        newlyDoneTask.setDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints out the tasks in the stored task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder listBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (Task task : this.listOfTasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listBuilder.append(\"     \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listBuilder.append(counter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listBuilder.append(\".\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listBuilder.append(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            listBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return listBuilder.toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Finds and returns tasks in the stored task list with a particular keyword."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param keyword keyword passed in by user to search for tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return tasks in stored task list with particular keyword"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        ArrayList\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for(Task task : this.listOfTasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            if(task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                tasksWithKeyword.add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return tasksWithKeyword;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 99
    }
  },
  {
    "path": "src/main/java/duke/logic/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.extension.expense.Expense;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Represents a user interface with methods that allows the programme to interact with users."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private Scanner reader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        reader \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints the loading error of the programme."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints a horizontal line in compliance with the user interface."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showSeparationLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder lineBuilder \u003d new StringBuilder(\"     \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for (int i \u003d 0; i \u003c 54; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            lineBuilder.append(\"_\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        lineBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return lineBuilder.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints a separation line in compliance with the user interface."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showBlankLine() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints a welcome statement when programme starts."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder welcomeBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        welcomeBuilder.append(\"Hello from\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        welcomeBuilder.append(logo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        welcomeBuilder.append(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return welcomeBuilder.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints a farewell statement when user command prompts to terminate the programme."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder byeBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        byeBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        byeBuilder.append(\"     Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        byeBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return  byeBuilder.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints an informative informing user a task is marked as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param task task that has been set as done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder doneBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        doneBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        doneBuilder.append(\"     Nice! I\u0027ve marked this task as done:\\n       \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        doneBuilder.append(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        doneBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        doneBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return doneBuilder.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints an informative informing user about a task that has been deleted."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param task task that has been deleted."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param size number of tasks in the ArrayList\u003cTask\u003e \u003c/Task\u003e."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showDelete(Task task, int size) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        assert size \u003e\u003d 0 : \"size of taskList must be at least zero\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder deleteBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(\"     Nice! I\u0027ve removed this task:\\n       \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(\"      Now you have \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(size);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(\" task(s) in the list.\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        deleteBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return deleteBuilder.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Prints an informative informing user about a task that has been added."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param task task that has been added."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @param size size of the ArrayList\u003cTask\u003e \u003c/Task\u003e."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showAdd(Task task, int size) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        assert size \u003e\u003d 0 : \"size of taskList must be at least zero\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder addBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        addBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        addBuilder.append(\"      Got it. I\u0027ve added this task:\\n       \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        addBuilder.append(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        addBuilder.append(\"\\n      Now you have \" + size + \" task(s) in the list.\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        addBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        addBuilder.append(this.showBlankLine());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return addBuilder.toString();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showMatchingTasks(ArrayList\u003cTask\u003e listOfMatches) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder tasksBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        tasksBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        tasksBuilder.append(\"      Here are the matching task(s) in your list:\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        for(Task task : listOfMatches) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            tasksBuilder.append(\"     \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            tasksBuilder.append(counter);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            tasksBuilder.append(\".\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            tasksBuilder.append(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            tasksBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        tasksBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        tasksBuilder.append(this.showBlankLine());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return tasksBuilder.toString();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showAddedExpense(Expense addedExpense) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder expenseBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(\"      Got it. I\u0027ve added this expense:\\n       \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(addedExpense);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(this.showBlankLine());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return expenseBuilder.toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showDeletedExpense(Expense deletedExpense) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder expenseBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(\"      Okay. I\u0027ve deleted this expense:\\n       \");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(deletedExpense);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(this.showSeparationLine());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        expenseBuilder.append(this.showBlankLine());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return expenseBuilder.toString();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String showGlossary() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder glossaryBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"Hi! Check out these commands that you will find helpful!\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"bye: Termination of programme\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"list: Shows all available tasks and their status\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"done {index}: Marks the task at the index as done\\n\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"delete {index}: Deletes the task at the index\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"find {keyword}: Displays a list of tasks that contains the given keyword or phrase\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"find {keyword}: Displays a list of tasks that contains the given keyword or phrase\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"todo {task}: Adds a \u0027todo\u0027 style task\\n\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"deadline (task} /by {time}: Adds a \u0027deadline\u0027 style task\\n\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"event (task} /at {time}: Adds an \u0027event\u0027 style task\\n\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"spending {category} {amount} {brief description}: Adds a spending\\n\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"expenses: Shows all expenses\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"delexp {category} {index}: Deletes the expense at the given index of the category\\n\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~\\n\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"glossary: Just shows the glossary, duh!\\n\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        glossaryBuilder.append(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return glossaryBuilder.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 190
    }
  },
  {
    "path": "src/main/java/duke/task/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import duke.logic.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Represents a date, contains three integers that represents the day, month, and year."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private static final HashMap\u003cInteger, String\u003e MONTHMAP \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(1, \"January\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(2, \"February\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(3, \"March\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(4, \"April\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(5, \"May\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(6, \"June\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(7, \"July\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(8, \"August\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(9, \"September\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(10, \"October\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(11, \"November\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        MONTHMAP.put(12, \"December\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Date(String inputDate) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            assert inputDate !\u003d null : \"the input date cannot be null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            String[] tempStringArr \u003d inputDate.split(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            this.day \u003d Integer.parseInt((String) Array.get(tempStringArr, 0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            this.month \u003d Integer.parseInt((String) Array.get(tempStringArr, 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            this.year \u003d Integer.parseInt((String) Array.get(tempStringArr, 2));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            assert this.day \u003c\u003d 31 : \"day value cannot be more than 31\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            assert this.month \u003c\u003d 12 : \"month value cannot be more than 12\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ae) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            //can we throw this to the user interface instead?"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            System.out.println(\"Date must be specified in the form dd/mm/yyyy\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string description of the day."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of day."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getDayAsString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder dayBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dayBuilder.append(this.day);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        if (this.day \u003d\u003d 1 || this.day \u003d\u003d 21 || this.day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dayBuilder.append(\"st\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } else if (this.day \u003d\u003d 2 || this.day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dayBuilder.append(\"nd\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } else if (this.day \u003d\u003d 3 || this.day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dayBuilder.append(\"rd\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            dayBuilder.append(\"th\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return dayBuilder.toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string description of the month."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of month."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getMonthAsString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return MONTHMAP.get(this.month);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string description of the date."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of date."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder dateBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dateBuilder.append(getDayAsString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dateBuilder.append(\" of \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dateBuilder.append(getMonthAsString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dateBuilder.append(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        dateBuilder.append(this.year);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return dateBuilder.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 92
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Represents a deadline, which is a specific type of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    protected Date byDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    protected Time byTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    protected String exactBy;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.exactBy \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String[] temp \u003d by.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            byDate \u003d new Date((String) Array.get(temp, 0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            byTime \u003d new Time((String) Array.get(temp, 1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns the deadline time formatted exactly as keyed in by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return deadline time formatted exactly as keyed in by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getExactBy() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.exactBy;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string representing the type of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string representing type of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns string description of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.byDate + \", \" + this.byTime +\")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Represents an event, which is a specific type of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    protected Date atDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    protected Time atTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    protected String exactDuration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Event(String description, String duration) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.exactDuration \u003d duration;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        String[] temp \u003d duration.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        atDate \u003d new Date((String) Array.get(temp, 0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        atTime \u003d new Time((String) Array.get(temp, 1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns the event time formatted exactly as keyed in by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return event time formatted exactly as keyed in by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getExactDuration() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.exactDuration;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string representing the type of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string representing type of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns string description of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.atDate + \", \" + this.atTime +\")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Represents a task object with a description of the task and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * an indication of whether the task is done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return description of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a Boolean indicating whether the task is done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return whether task is done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Sets the task to be done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string representing the type of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string representing type of task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        //how to make code more elegant"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns string description of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            temp.append(\"[done] \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            temp.append(\"[undone] \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        temp.append(this.description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return temp.toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " * Represents a time. Contains two integers representing hour and minute."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    private int minute;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Time(String format24h) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.hour \u003d Integer.parseInt(format24h.substring(0, 2));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        this.minute \u003d Integer.parseInt(format24h.substring(2));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        assert this.hour \u003c\u003d 23 : \"hour value cannot be more than 24\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        assert this.minute \u003c\u003d 59 : \"minute value cannot be more than 59\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns string description of the time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        StringBuilder timeString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        if (this.hour \u003e 12) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            timeString.append(this.hour - 12);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            timeString.append(this.hour);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        if (this.minute !\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            timeString.append(\":\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            timeString.append(String.format(\"%02d\", this.minute));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        if (this.hour \u003e\u003d 12) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            timeString.append(\"pm\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "            timeString.append(\"am\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return timeString.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns a string representing the type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string representing type of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * Returns string description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     * @return string description of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 28
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "import src.test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheeyou"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Assertions.assertEquals(\"[T][✗]  eat\", new Todo(\"eat\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Assertions.assertEquals(\"[D][✗]  read by: 6th September 2019, 740pm\", new Deadline(\"read\", \"06/09/2019 1940\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Assertions.assertEquals(\"[D][✗]  meeting Jason at: 6th September 2019, 8:02pm\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "                new Event(\"meeting Jason\", \"06/09/2019 2002\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    public void testSetDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Task temp \u003d new Todo(\"sleep\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        temp.setDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "        Assertions.assertEquals(done, temp.isDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheeyou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheeyou": 20
    }
  }
]
